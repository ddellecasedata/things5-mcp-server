{
  "openapi": "3.1.0",
  "info": {
    "title": "Things5 HTTP API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.staging.things5.digital/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "sec0": {
        "type": "apiKey",
        "in": "header",
        "name": "authorization",
        "x-default": "Bearer <access_token>"
      }
    }
  },
  "security": [
    {
      "sec0": []
    }
  ],
  "paths": {
    "/recipes/organizations/{organization_id}/recipe_templates": {
      "get": {
        "summary": "Recipe template list",
        "description": "Retrieve the list of recipe templates that the user is allowed to see",
        "operationId": "recipe-template-list",
        "parameters": [
          {
            "name": "cookbook_ids[]",
            "in": "query",
            "description": "Filter recipe templates by cookbook",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "search recipe name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination parameter. If there are a lot of recipes only some will be present in data field. To get the remaining items repeat the API call using the after parameter present in the body of the previous request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "machine_model_ids",
            "in": "query",
            "description": "filter by machine models",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "max items returned by pagination",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"cookbooks\": [\n        {\n          \"id\": \"4fc09934-9cf5-4239-900b-adbd91c03313\",\n          \"name\": \"breakfast\"\n        },\n        {\n          \"id\": \"faad7c4f-9e6e-4354-9e4f-9c33a2659130\",\n          \"name\": \"breads\"\n        }\n      ],\n      \"description\": \"Recipe description\",\n      \"id\": \"fb0b8a34-7a14-4c0c-942d-43832bd2a0d9\",\n      \"inserted_at\": 1659530612000,\n      \"machine_model_id\": \"213137ac-118b-4d9d-b8da-21a20816ba89\",\n      \"metadata\": [\n        {\n          \"name\": \"image_path\",\n          \"type\": \"string\",\n          \"value\": \"../images/fish.jpg\"\n        },\n        {\n          \"name\": \"index_in_list\",\n          \"type\": \"integer\",\n          \"value\": \"6\"\n        }\n      ],\n      \"name\": \"Pollo con patate al cuore\",\n      \"phases\": [\n        {\n          \"dosages\": [\n            [\n              {\n                \"metadata\": [\n                  {\n                    \"name\": \"temperature\",\n                    \"type\": \"integer\",\n                    \"value\": \"20\"\n                  },\n                  {\n                    \"name\": \"type\",\n                    \"type\": \"integer\",\n                    \"value\": \"1\"\n                  }\n                ],\n                \"name\": \"yeast\",\n                \"quantity\": \"5.5\"\n              }\n            ]\n          ],\n          \"values\": [\n            {\n              \"name\": \"cell_temperature\",\n              \"type\": \"integer\",\n              \"value\": \"-20\"\n            },\n            {\n              \"name\": \"core_temperature\",\n              \"type\": \"integer\",\n              \"value\": \"-5\"\n            },\n            {\n              \"name\": \"evaporator_fan_speed\",\n              \"type\": \"integer\",\n              \"value\": \"4\"\n            }\n          ]\n        },\n        {\n          \"values\": [\n            {\n              \"name\": \"cell_temperature\",\n              \"type\": \"integer\",\n              \"value\": \"-10\"\n            },\n            {\n              \"name\": \"evaporator_fan_speed\",\n              \"type\": \"integer\",\n              \"value\": \"0\"\n            }\n          ]\n        },\n        {\n          \"values\": [\n            {\n              \"name\": \"cell_temperature\",\n              \"type\": \"integer\",\n              \"value\": \"-20\"\n            },\n            {\n              \"name\": \"core_temperature\",\n              \"type\": \"integer\",\n              \"value\": \"-5\"\n            },\n            {\n              \"name\": \"evaporator_fan_speed\",\n              \"type\": \"integer\",\n              \"value\": \"1\"\n            }\n          ]\n        },\n        {\n          \"values\": [\n            {\n              \"name\": \"cell_temperature\",\n              \"type\": \"integer\",\n              \"value\": \"-20\"\n            },\n            {\n              \"name\": \"core_temperature\",\n              \"type\": \"integer\",\n              \"value\": \"-5\"\n            },\n            {\n              \"name\": \"evaporator_fan_speed\",\n              \"type\": \"integer\",\n              \"value\": \"2\"\n            }\n          ]\n        }\n      ],\n      \"updated_at\": 1659530612000\n    }\n  ],\n  \"pagination\": {\n    \"after\": \"g3QAAAABZAACaWRtAAAAJGM0NzVjYTU4LThmYTYtNDExMC05NmJmLTFiMjcwNzNjZjI4Mg==\",\n    \"total_count\": 7\n  }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cookbooks": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "4fc09934-9cf5-4239-900b-adbd91c03313"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "breakfast"
                                }
                              }
                            }
                          },
                          "description": {
                            "type": "string",
                            "example": "Recipe description"
                          },
                          "id": {
                            "type": "string",
                            "example": "fb0b8a34-7a14-4c0c-942d-43832bd2a0d9"
                          },
                          "inserted_at": {
                            "type": "integer",
                            "example": 1659530612000,
                            "default": 0
                          },
                          "machine_model_id": {
                            "type": "string",
                            "example": "213137ac-118b-4d9d-b8da-21a20816ba89"
                          },
                          "metadata": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "example": "image_path"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "value": {
                                  "type": "string",
                                  "example": "../images/fish.jpg"
                                }
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "example": "Pollo con patate al cuore"
                          },
                          "phases": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "dosages": {
                                  "type": "array",
                                  "items": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "metadata": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "example": "temperature"
                                              },
                                              "type": {
                                                "type": "string",
                                                "example": "integer"
                                              },
                                              "value": {
                                                "type": "string",
                                                "example": "20"
                                              }
                                            }
                                          }
                                        },
                                        "name": {
                                          "type": "string",
                                          "example": "yeast"
                                        },
                                        "quantity": {
                                          "type": "string",
                                          "example": "5.5"
                                        }
                                      }
                                    }
                                  }
                                },
                                "values": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "cell_temperature"
                                      },
                                      "type": {
                                        "type": "string",
                                        "example": "integer"
                                      },
                                      "value": {
                                        "type": "string",
                                        "example": "-20"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "updated_at": {
                            "type": "integer",
                            "example": 1659530612000,
                            "default": 0
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "after": {
                          "type": "string",
                          "example": "g3QAAAABZAACaWRtAAAAJGM0NzVjYTU4LThmYTYtNDExMC05NmJmLTFiMjcwNzNjZjI4Mg=="
                        },
                        "total_count": {
                          "type": "integer",
                          "example": 7,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Recipe template create",
        "description": "",
        "operationId": "recipe-template-create",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"recipe_template\": {\n    \"name\": \"Pollo con patate al cuore\",\n    \"description\": \"Recipe description\",\n    \"phases\": [\n      {\n        \"values\": [\n          {\n            \"name\": \"evaporator_fan_speed\",\n            \"value\": \"4\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"core_temperature\",\n            \"value\": \"-5\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"cell_temperature\",\n            \"value\": \"-20\",\n            \"type\": \"integer\"\n          }\n        ]\n      },\n      {\n        \"values\": [\n          {\n            \"name\": \"evaporator_fan_speed\",\n            \"value\": \"2\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"core_temperature\",\n            \"value\": \"-5\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"cell_temperature\",\n            \"value\": \"-20\",\n            \"type\": \"integer\"\n          }\n        ]\n      },\n      {\n        \"values\": [\n          {\n            \"name\": \"evaporator_fan_speed\",\n            \"value\": \"1\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"core_temperature\",\n            \"value\": \"-5\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"cell_temperature\",\n            \"value\": \"-20\",\n            \"type\": \"integer\"\n          }\n        ]\n      },\n      {\n        \"values\": [\n          {\n            \"name\": \"evaporator_fan_speed\",\n            \"value\": \"0\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"cell_temperature\",\n            \"value\": \"-10\",\n            \"type\": \"integer\"\n          }\n        ]\n      }\n    ],\n    \"cookbooks\": [],\n    \"machine_model_id\": \"9243648d-f6dc-449b-a4d4-051635ab3039\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipe_template": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Pollo con patate al cuore"
                        },
                        "description": {
                          "type": "string",
                          "example": "Recipe description"
                        },
                        "phases": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "values": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "example": "evaporator_fan_speed"
                                    },
                                    "value": {
                                      "type": "string",
                                      "example": "4"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "cookbooks": {
                          "type": "array"
                        },
                        "machine_model_id": {
                          "type": "string",
                          "example": "9243648d-f6dc-449b-a4d4-051635ab3039"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/recipes/cookbook_syncs": {
      "get": {
        "summary": "Cookbook syncs list",
        "description": "Get the list of cookbooks synchcronizations",
        "operationId": "list-cookbook-sync",
        "parameters": [
          {
            "name": "machine_model_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination parameter. If there are a lot of items only some will be present in data field. To get the remaining items repeat the API call using the after parameter present in the body of the previous request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cookbook_id",
            "in": "query",
            "description": "filter by cookbook id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "max items returned by pagination",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "ISO_8601 format. Example: 2022-01-01T00:00:00.000Z",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "ISO_8601 format. Example: 2022-01-02T00:00:00.000Z",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"cookbook\": {\n      \"id\": \"e6bbfcad-5fac-45e6-8cbb-fcbe0947335a\"\n    \t\"name\": \"breakfast\"\n    },\n    \"cookbook_id\": \"425c2ce1-d0bc-44fc-a7c9-f65d7f370c23\",\n    \"errors_number\": 2,\n    \"id\": \"fe9d1ebb-f37f-4db6-afef-cbf54042c4e3\",\n    \"inserted_at\": 1656665039,\n    \"devices_number\": 22,\n    \"organization_id\": \"dc166037-0bbf-4115-baa0-c4888167cce4\",\n    \"updated_at\": 1656665051\n  },\n  \"pagination\": {\n    \"after\": \"g3QAAAABZAACaWRtAAAAJGM0NzVjYTU4LThmYTYtNDExMC05NmJmLTFiMjcwNzNjZjI4Mg==\"\n  }\n}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes/cookbook_syncs/{cookbook_sync_id}": {
      "get": {
        "summary": "Cookbook sync detail",
        "description": "",
        "operationId": "cookbook-sync-detail",
        "parameters": [
          {
            "name": "cookbook_sync_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"cookbook_sync\": {\n    \"cookbook\": {\n      \"id\": \"686c83dd-f0b2-4e97-b66f-17ebec9418a2\",\n      \"name\": \"Breads\"\n    }\n    \"cookbook_id\": \"686c83dd-f0b2-4e97-b66f-17ebec9418a2\",\n    \"cookbook_sync_logs\": [\n      {\n        \"device_id\": \"cb59e86e-a6bb-4214-aef9-190db03e7b4a\",\n        \"device_name\": \"demo machine\",\n        \"error\": null,\n        \"id\": \"8edbe13b-2501-4116-8cf8-42e72853793c\",\n        \"retry_enabled\": true,\n        \"sent_at\": 1657031449000,\n        \"serial_number\": \"1234\"\n      }\n    ],\n    \"id\": \"bc6552c6-ae20-4b60-b75f-a0b9c6e0af8f\"\n  }\n}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes//organizations/{organization_id}/cookbooks": {
      "get": {
        "summary": "Cookbook list",
        "description": "",
        "operationId": "cookbook-list",
        "parameters": [
          {
            "name": "machine_model_ids",
            "in": "query",
            "description": "Filter by machine models",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "include_recipe_templates_number",
            "in": "query",
            "description": "if true include \"recipes_number\" field in response",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "include_sync_info",
            "in": "query",
            "description": "if true include \"sync_errors_number\" and \"last_sync_at\" fields in response",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "return cookbooks filtered by name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination parameter. If there are a lot of items only some will be present in data field. To get the remaining items repeat the API call using the after parameter present in the body of the previous request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "max items returned by pagination",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"created_by\": \"e88657f7-77ec-4583-a99d-15e11d8c7271\",\n      \"last_edited_by\": \"e88657f7-77ec-4583-a99d-15e11d8c7271\",\n      \"last_sync_at\": 1657036794000,\n      \"machine_model_id\": \"cf910a04-d8e7-4c76-81ce-943c6c9b40f2\",\n      \"name\": \"breakfast\",\n      \"organization_id\": \"4674d48c-f055-4811-a88d-9c2c9cbef74f\",\n      \"pending_edit\": true,\n      \"recipe_templates_number\": 3,\n      \"sync_errors_number\": 0,\n      \"synching\": false,\n    },\n    {\n      \"created_by\": \"e88657f7-77ec-4583-a99d-15e11d8c7271\",\n      \"last_edited_by\": \"e88657f7-77ec-4583-a99d-15e11d8c7271\",\n      \"last_sync_at\": null,\n      \"machine_model_id\": \"cf910a04-d8e7-4c76-81ce-943c6c9b40f2\",\n      \"name\": \"dinner\",\n      \"organization_id\": \"4674d48c-f055-4811-a88d-9c2c9cbef74f\",\n      \"pending_edit\": false,\n      \"recipe_templates_number\": 1,\n      \"sync_errors_number\": 2,\n      \"synching\": false\n    }\n  ],\n  \"pagination\": {\n    \"after\": \"g3QAAAABZAACaWRtAAAAJGM0NzVjYTU4LThmYTYtNDExMC05NmJmLTFiMjcwNzNjZjI4Mg==\"\n  }\n}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes/cookbooks/{cookbook_id}": {
      "get": {
        "summary": "Cookbook detail",
        "description": "",
        "operationId": "cookbook-detail",
        "parameters": [
          {
            "name": "cookbook_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"created_by\": \"e88657f7-77ec-4583-a99d-15e11d8c7271\",\n    \"last_edited_by\": \"e88657f7-77ec-4583-a99d-15e11d8c7271\",\n    \"last_sync\": 1657036794000,\n    \"machine_model_id\": \"cf910a04-d8e7-4c76-81ce-943c6c9b40f2\",\n    \"name\": \"breakfast\",\n    \"organization_id\": \"4674d48c-f055-4811-a88d-9c2c9cbef74f\",\n    \"pending_edit\": true,\n    \"recipe_templates\": [\n      {\n        \"description\": \"Recipe description\",\n        \"id\": \"fb0b8a34-7a14-4c0c-942d-43832bd2a0d9\",\n        \"index\": 0,\n        \"machine_model_id\": \"213137ac-118b-4d9d-b8da-21a20816ba89\",\n        \"metadata\": [\n          {\n            \"name\": \"image_path\",\n            \"type\": \"string\",\n            \"value\": \"../images/fish.jpg\"\n          },\n          {\n            \"name\": \"index_in_list\",\n            \"type\": \"integer\",\n            \"value\": \"6\"\n          }\n        ],\n        \"name\": \"Pollo con patate al cuore\",\n        \"phases\": [\n          {\n            \"dosages\": [\n              [\n                {\n                  \"metadata\": [\n                    {\n                      \"name\": \"type\",\n                      \"type\": \"integer\",\n                      \"value\": \"1\"\n                    },\n                    {\n                      \"name\": \"temperature\",\n                      \"type\": \"integer\",\n                      \"value\": \"20\"\n                    }\n                  ],\n                  \"name\": \"yeast\",\n                  \"quantity\": \"5.5\"\n                }\n              ]\n            ],\n            \"values\": [\n              {\n                \"name\": \"evaporator_fan_speed\",\n                \"type\": \"integer\",\n                \"value\": \"4\"\n              },\n              {\n                \"name\": \"core_temperature\",\n                \"type\": \"integer\",\n                \"value\": \"-5\"\n              },\n              {\n                \"name\": \"cell_temperature\",\n                \"type\": \"integer\",\n                \"value\": \"-20\"\n              }\n            ]\n          },\n          {\n            \"values\": [\n              {\n                \"name\": \"evaporator_fan_speed\",\n                \"type\": \"integer\",\n                \"value\": \"2\"\n              },\n              {\n                \"name\": \"core_temperature\",\n                \"type\": \"integer\",\n                \"value\": \"-5\"\n              },\n              {\n                \"name\": \"cell_temperature\",\n                \"type\": \"integer\",\n                \"value\": \"-20\"\n              }\n            ]\n          },\n          {\n            \"values\": [\n              {\n                \"name\": \"evaporator_fan_speed\",\n                \"type\": \"integer\",\n                \"value\": \"1\"\n              },\n              {\n                \"name\": \"core_temperature\",\n                \"type\": \"integer\",\n                \"value\": \"-5\"\n              },\n              {\n                \"name\": \"cell_temperature\",\n                \"type\": \"integer\",\n                \"value\": \"-20\"\n              }\n            ]\n          },\n          {\n            \"values\": [\n              {\n                \"name\": \"evaporator_fan_speed\",\n                \"type\": \"integer\",\n                \"value\": \"0\"\n              },\n              {\n                \"name\": \"cell_temperature\",\n                \"type\": \"integer\",\n                \"value\": \"-10\"\n              }\n            ]\n          }\n        ]\n      }\n    ],\n    \"synching\": false\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "created_by": {
                          "type": "string",
                          "example": "e88657f7-77ec-4583-a99d-15e11d8c7271"
                        },
                        "last_edited_by": {
                          "type": "string",
                          "example": "e88657f7-77ec-4583-a99d-15e11d8c7271"
                        },
                        "last_sync": {
                          "type": "integer",
                          "example": 1657036794000,
                          "default": 0
                        },
                        "machine_model_id": {
                          "type": "string",
                          "example": "cf910a04-d8e7-4c76-81ce-943c6c9b40f2"
                        },
                        "name": {
                          "type": "string",
                          "example": "breakfast"
                        },
                        "organization_id": {
                          "type": "string",
                          "example": "4674d48c-f055-4811-a88d-9c2c9cbef74f"
                        },
                        "pending_edit": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "recipe_templates": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string",
                                "example": "Recipe description"
                              },
                              "id": {
                                "type": "string",
                                "example": "fb0b8a34-7a14-4c0c-942d-43832bd2a0d9"
                              },
                              "index": {
                                "type": "integer",
                                "example": 0,
                                "default": 0
                              },
                              "machine_model_id": {
                                "type": "string",
                                "example": "213137ac-118b-4d9d-b8da-21a20816ba89"
                              },
                              "metadata": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "example": "image_path"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "value": {
                                      "type": "string",
                                      "example": "../images/fish.jpg"
                                    }
                                  }
                                }
                              },
                              "name": {
                                "type": "string",
                                "example": "Pollo con patate al cuore"
                              },
                              "phases": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "dosages": {
                                      "type": "array",
                                      "items": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "metadata": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "example": "type"
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "example": "integer"
                                                  },
                                                  "value": {
                                                    "type": "string",
                                                    "example": "1"
                                                  }
                                                }
                                              }
                                            },
                                            "name": {
                                              "type": "string",
                                              "example": "yeast"
                                            },
                                            "quantity": {
                                              "type": "string",
                                              "example": "5.5"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "evaporator_fan_speed"
                                          },
                                          "type": {
                                            "type": "string",
                                            "example": "integer"
                                          },
                                          "value": {
                                            "type": "string",
                                            "example": "4"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "synching": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Cookbook delete",
        "description": "",
        "operationId": "cookbook-delete",
        "parameters": [
          {
            "name": "cookbook_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes/cookbook_syncs": {
      "post": {
        "summary": "Cookbook sync request",
        "description": "Send all recipe templates of a cookbook to many devices.",
        "operationId": "cookbook-sync-request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cookbook_id": {
                    "type": "string"
                  },
                  "device_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "cookbook_id": "5df90061-0055-4a7a-bf65-4fbfc4f27fe2",
                    "device_ids": [
                      "696d184b-1f69-41b2-9569-bdc49a51f72d",
                      "a767c2d0-a6fc-45b1-ac34-cf67a3deb5f1"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"cookbook_sync_logs\": [],\n    \"id\": \"2282fbcd-815e-4700-b55b-d48ca416820e\",\n    \"inserted_at\": \"2022-08-03T14:08:18\",\n    \"updated_at\": \"2022-08-03T14:08:18\"\n  },\n  \"errors\": [{\n    \"code\": \"BACKEND_ERRORS.COOKBOOKS.WRONG_MACHINE_MODEL_SYNC\",\n    \"message\": \"Wrong device model: cookbook #{cookbook_name} has not been made for device #{device_serial}\",\n    \"opt\": {\n      \"cookbook_name\": \"breakfast\",\n      \"device_serial\": \"1234\"\n    }\n  }]\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "cookbook_sync_logs": {
                          "type": "array"
                        },
                        "id": {
                          "type": "string",
                          "example": "2282fbcd-815e-4700-b55b-d48ca416820e"
                        },
                        "inserted_at": {
                          "type": "string",
                          "example": "2022-08-03T14:08:18"
                        },
                        "updated_at": {
                          "type": "string",
                          "example": "2022-08-03T14:08:18"
                        }
                      }
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "BACKEND_ERRORS.COOKBOOKS.WRONG_MACHINE_MODEL_SYNC"
                          },
                          "message": {
                            "type": "string",
                            "example": "Wrong device model: cookbook #{cookbook_name} has not been made for device #{device_serial}"
                          },
                          "opt": {
                            "type": "object",
                            "properties": {
                              "cookbook_name": {
                                "type": "string",
                                "example": "breakfast"
                              },
                              "device_serial": {
                                "type": "string",
                                "example": "1234"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes/cookbook_sync_logs/{cookbook_sync_log_id}/retry": {
      "get": {
        "summary": "Cookbook sync log retry",
        "description": "Retry to send all cookbook's recipe templates to device",
        "operationId": "cookbook-sync-request-retry",
        "parameters": [
          {
            "name": "cookbook_sync_log_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "\n"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "text/plain": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/{device_id}/haccp/notification_config": {
      "patch": {
        "summary": "HACCP email notification update",
        "description": "Enable or disabled HACCP email notification every day at 7 UTC",
        "operationId": "haccp-notifications-config-update",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "notification_config"
                ],
                "properties": {
                  "notification_config": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "description": "whether email notification for HACCP is enabled or not"
                      }
                    }
                  }
                }
              },
              "examples": {
                "Body": {
                  "value": {
                    "notification_config": {
                      "enabled": true
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"data\": {\n        \"enabled\": true\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "HACCP email notification detail",
        "description": "Get HACCP email notification status (enabled or disabled)",
        "operationId": "haccp-email-notification-detail",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"data\": {\n        \"enabled\": true\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices": {
      "post": {
        "summary": "Device create",
        "description": "Create a new device on things5. Name and machine_firmware_id are optional fields.\nIf used by admin users organization_id must be provided. If used by standard users machines_group_id is required.\n\nDevice manufactures should use a standard user to authenticate and create the device using machines_group_id\n\nPlease note that firmware id is not present because the machine should use Firmware version request to communicate the firmware version to things5",
        "operationId": "device-create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "serial",
                  "machine_model_id",
                  "machine_firmware_id",
                  "organization_id"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Device name"
                  },
                  "serial": {
                    "type": "string",
                    "default": "Device serial"
                  },
                  "machine_model_id": {
                    "type": "string",
                    "description": "Device model iD. Can be retrived using Machine models list"
                  },
                  "machine_firmware_id": {
                    "type": "string",
                    "description": "Device firmware ID (must belong to the same model) (optional). Can be retrived using Machine firmwares list"
                  },
                  "organization_id": {
                    "type": "string",
                    "description": "Required if user is admin. Can be retrived using Organizations list"
                  },
                  "machines_group_id": {
                    "type": "string",
                    "description": "Required if user is not admin"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"id\": \"12a06143-13ca-4b16-a6b6-d7629a7b00c7\",\n    \"name\": \"machine_name\",\n    \"serial\": \"1234\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "12a06143-13ca-4b16-a6b6-d7629a7b00c7"
                        },
                        "name": {
                          "type": "string",
                          "example": "machine_name"
                        },
                        "serial": {
                          "type": "string",
                          "example": "1234"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "[DEPRECATED] Device list",
        "description": "Retrieve the list of devices that the user is allowed to see",
        "operationId": "deprecated-device-list",
        "parameters": [
          {
            "name": "serial",
            "in": "query",
            "description": "Filter by device serial",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination parameter. If there are a lot of items only some will be present in data field. To get the remaining items repeat the API call using the after parameter present in the body of the previous request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Filter by name and serial",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_machine_model",
            "in": "query",
            "description": "Includues also machine model info in the response",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "machine_groups_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "connected",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "no_group_assigned",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "include_machines_group",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "machine_model_ids[]",
            "in": "query",
            "description": "Filter by machine models",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "include_machine_plan",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"active\": false,\n      \"id\": \"002fadff-702c-4b4f-ac10-0d4847b0350e\",\n      \"is_connected\": true,\n      \"machine_firmware_id\": \"24ead0b7-0e1a-4ba8-a9b6-af68a14b2ee8\",\n      \"name\": \"FOO\",\n      \"serial\": \"ABCDE\",\n      \"machine_model\": {\n        \"id\": \"7157a385-5249-4ba3-b01d-98f62a5320df\",\n        \"identifier\": \"AV-45\",\n        \"image\": \"https://assets.com/sample-image.png\",\n        \"machine_firmwares\": null,\n        \"main_firmware\": null,\n        \"name\": \"Foo\"\n      }\n    },\n    {\n      \"active\": false,\n      \"id\": \"00b88fd1-1713-4291-b31f-df595bc816c1\",\n      \"is_connected\": false,\n      \"machine_firmware_id\": \"cfa7d97a-0879-4cea-a68f-a08536ebe9a8\",\n      \"machines_group\": {\n        \"category\": null,\n        \"category_id\": \"19127fd9-46dc-48b9-bca6-935f13e71e7e\",\n        \"id\": \"ed6e122d-954b-42f3-accc-7f7be4717ea4\",\n        \"machines\": null,\n        \"name\": \"Collaudo\",\n        \"organization_id\": \"82a0e3fe-d553-42ba-a5dc-48ed221c5c8f\",\n        \"parent_id\": null\n      },\n      \"name\": \"BAR\",\n      \"serial\": \"foo\",\n      \"machine_model\": {\n        \"id\": \"7157a385-5249-4ba3-b01d-98f62a5320df\",\n        \"identifier\": \"AV-45\",\n        \"image\": \"https://assets.com/sample-image.png\",\n        \"machine_firmwares\": null,\n        \"main_firmware\": null,\n        \"name\": \"Foo\"\n      },\n      \"machine_plans\": [{\n        \"plan\": {\n          \"id\": \"40ef38a5-0231-4f67-816a-31e9601b0b27\",\n          \"name\": \"Plan 2\",\n          \"duration_days\": 30,\n          \"tolerance_days\": 7,\n          \"is_fallback\": false,\n          \"is_default\": false,\n          \"created_by_email\": \"user8@example.com\",\n          \"updated_by_email\": \"user9@example.com\",\n          \"machine_plans_count\": null,\n          \"organization_id\": \"bacb8f27-939c-433d-b61a-3d43adb104b5\",\n          \"organization\": null,\n          \"machine_plans\": null,\n          \"machines\": null,\n          \"plan_permissions\": null,\n          \"inserted_at\": \"2023-02-06T08:41:57Z\",\n          \"updated_at\": \"2023-02-06T08:41:57Z\"\n        },\n        \"activation\": \"2023-02-06T08:41:57Z\",\n        \"expiration\": \"2023-04-06T08:41:57Z\"\n      }]\n    }\n  ],\n  \"pagination\": {\n    \"after\": \"g3QAAAABZAACaWRtAAAAJDAzMjE4YjRjLTAxYzEtNDI3MC04ZmQzLTg2ZmY1N2ZhNzlhMw==\",\n    \"count_total\": 1000\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "active": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          },
                          "id": {
                            "type": "string",
                            "example": "002fadff-702c-4b4f-ac10-0d4847b0350e"
                          },
                          "is_connected": {
                            "type": "boolean",
                            "example": true,
                            "default": true
                          },
                          "machine_firmware_id": {
                            "type": "string",
                            "example": "24ead0b7-0e1a-4ba8-a9b6-af68a14b2ee8"
                          },
                          "name": {
                            "type": "string",
                            "example": "FOO"
                          },
                          "serial": {
                            "type": "string",
                            "example": "ABCDE"
                          },
                          "machine_model": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "7157a385-5249-4ba3-b01d-98f62a5320df"
                              },
                              "identifier": {
                                "type": "string",
                                "example": "AV-45"
                              },
                              "image": {
                                "type": "string",
                                "example": "https://assets.com/sample-image.png"
                              },
                              "machine_firmwares": {},
                              "main_firmware": {},
                              "name": {
                                "type": "string",
                                "example": "Foo"
                              }
                            }
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "after": {
                          "type": "string",
                          "example": "g3QAAAABZAACaWRtAAAAJDAzMjE4YjRjLTAxYzEtNDI3MC04ZmQzLTg2ZmY1N2ZhNzlhMw=="
                        },
                        "count_total": {
                          "type": "integer",
                          "example": 1000,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/{device_id}/regenerate_certs": {
      "put": {
        "summary": "Device provisioning V1",
        "description": "Generates a device certificate for an already created device on things5. Follow [Device create](ref:device-create) to create a new device.\nOn success returns a zip file containing the certificate files used to connect to the MQTT broker\n\nBE CAREFUL:  Using this resource will invalidate all previous device certificates",
        "operationId": "device-provisioning",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "format": {
                    "type": "string",
                    "description": "can be \"tar\" or \"tar.gz\" otherwise zip will be used",
                    "default": "zip"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "format": "tar.gz"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/devices/{device_id}/ingest": {
      "post": {
        "summary": "Data ingestion",
        "description": "Use this endpoint to send all the data that the device is generating: metrics, states and events.",
        "operationId": "data-ingestion-1",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/{device_id}/states": {
      "get": {
        "summary": "States read",
        "description": "Read state changes, like door open or cooling cycle from a specific device",
        "operationId": "states-read",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "timestamp ISO 8601. E.g. 2021-07-27T00:00:00Z",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "timestamp ISO 8601. E.g. 2021-07-27T00:00:00Z",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "states_names",
            "in": "query",
            "description": "filter using state name",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination parameter. If there are a lot of items only some will be present in data field. To get the remaining items repeat the API call using the after parameter present in the body of the previous request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_translations",
            "in": "query",
            "description": "wheter to include the translated name or not",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "device_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "max 1000",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"end_time\": null,\n      \"id\": \"15b8cca1-a7e7-426d-bdc3-c69b267e2378\",\n      \"metadata\": {},\n      \"name\": \"door\",\n      \"start_time\": \"2023-01-10T14:10:17Z\",\n      \"value\": \"open\",\n      \"translation\": \"porta\"\n    },\n    {\n      \"end_time\": null,\n      \"id\": \"3d56f146-c488-4e93-b1da-fa5775a6daf3\",\n      \"metadata\": {},\n      \"name\": \"Device Status\",\n      \"start_time\": \"2023-01-10T14:11:20Z\",\n      \"value\": \"off\"\n    }\n  ],\n  \"pagination\": {\n    \"after\": \"g3QAAAACbQAAAARuYW1lbQAAAAlTb2xlbm9pZGVtAAAACnN0YXJ0X3RpbWV0AAAADWQACl9fc3RydWN0X19kAA9FbGl4aXIuRGF0ZVRpbWVkAAhjYWxlbmRhcmQAE0VsaXhpci5DYWxlbmRhci5JU09kAANkYXlhCmQABGhvdXJhDmQAC21pY3Jvc2Vjb25kaAJhAGEAZAAGbWludXRlYTlkAAVtb250aGEBZAAGc2Vjb25kYSBkAApzdGRfb2Zmc2V0YQBkAAl0aW1lX3pvbmVtAAAAB0V0Yy9VVENkAAp1dGNfb2Zmc2V0YQBkAAR5ZWFyYgAAB-dkAAl6b25lX2FiYnJtAAAAA1VUQw==\",\n    \"total_count\": null\n  }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "end_time": {},
                          "id": {
                            "type": "string",
                            "example": "15b8cca1-a7e7-426d-bdc3-c69b267e2378"
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {}
                          },
                          "name": {
                            "type": "string",
                            "example": "door"
                          },
                          "start_time": {
                            "type": "string",
                            "example": "2023-01-10T14:10:17Z"
                          },
                          "value": {
                            "type": "string",
                            "example": "open"
                          },
                          "translation": {
                            "type": "string",
                            "example": "porta"
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "after": {
                          "type": "string",
                          "example": "g3QAAAACbQAAAARuYW1lbQAAAAlTb2xlbm9pZGVtAAAACnN0YXJ0X3RpbWV0AAAADWQACl9fc3RydWN0X19kAA9FbGl4aXIuRGF0ZVRpbWVkAAhjYWxlbmRhcmQAE0VsaXhpci5DYWxlbmRhci5JU09kAANkYXlhCmQABGhvdXJhDmQAC21pY3Jvc2Vjb25kaAJhAGEAZAAGbWludXRlYTlkAAVtb250aGEBZAAGc2Vjb25kYSBkAApzdGRfb2Zmc2V0YQBkAAl0aW1lX3pvbmVtAAAAB0V0Yy9VVENkAAp1dGNfb2Zmc2V0YQBkAAR5ZWFyYgAAB-dkAAl6b25lX2FiYnJtAAAAA1VUQw=="
                        },
                        "total_count": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/{device_id}/last_states": {
      "get": {
        "summary": "States read last value",
        "description": "Read state changes, like door open or cooling cycle from a specific device",
        "operationId": "states-read-last-value",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "states_names",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"end_time\": null,\n      \"id\": \"3d56f146-c488-4e93-b1da-fa5775a6daf3\",\n      \"metadata\": {},\n      \"name\": \"Door\",\n      \"start_time\": \"2023-01-10T14:11:20Z\",\n      \"value\": \"open\",\n      \"label\": \"Porta\"\n    },\n    {\n      \"end_time\": null,\n      \"id\": \"15b8cca1-a7e7-426d-bdc3-c69b267e2378\",\n      \"metadata\": {},\n      \"name\": \"Compressor\",\n      \"start_time\": \"2023-01-10T14:10:17Z\",\n      \"value\": \"off\"\n    }\n  ]\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "end_time": {},
                          "id": {
                            "type": "string",
                            "example": "3d56f146-c488-4e93-b1da-fa5775a6daf3"
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {}
                          },
                          "name": {
                            "type": "string",
                            "example": "Door"
                          },
                          "start_time": {
                            "type": "string",
                            "example": "2023-01-10T14:11:20Z"
                          },
                          "value": {
                            "type": "string",
                            "example": "open"
                          },
                          "label": {
                            "type": "string",
                            "example": "Porta"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/{device_id}/metrics": {
      "get": {
        "summary": "Metrics read",
        "description": "Can be used to get a list of metrics values over time or a list of metrics last values.",
        "operationId": "metrics-read",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "timestamp ISO 8601. E.g. 2021-07-27T00:00:00Z",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "timestamp ISO 8601. E.g. 2021-07-27T00:00:00Z",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "metric_names[]",
            "in": "query",
            "description": "filter using metric names",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination parameter. If there are a lot of items only some will be present in data field. To get the remaining items repeat the API call using the after parameter present in the body of the previous request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "last_value",
            "in": "query",
            "description": "Cannot be set if from/to are set. Pagination will not be present in the response",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "max 1000",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"avg\": -10.29111,\n      \"first\": -9.42505,\n      \"increment\": 0.5510999999999999,\n      \"last\": -11.0206,\n      \"max\": -9.42505,\n      \"min\": -11.0206,\n      \"name\": \"BoardProbe\",\n      \"sample_count\": 5,\n      \"sum\": -51.45555,\n      \"timestamp\": \"2023-01-10T14:11:00Z\"\n    },\n    {\n      \"avg\": 33.6065,\n      \"first\": 33.6065,\n      \"increment\": 0,\n      \"last\": 33.6065,\n      \"max\": 33.6065,\n      \"min\": 33.6065,\n      \"name\": \"CondensatorProbe\",\n      \"sample_count\": 1,\n      \"sum\": 33.6065,\n      \"timestamp\": \"2023-01-10T14:11:00Z\"\n    }\n  ],\n  \"pagination\": {\n    \"after\": \"g3QAAAACbQAAAARuYW1lbQAAAApCb2FyZFByb2JlbQAAAAl0aW1lc3RhbXB0AAAADWQACl9fc3RydWN0X19kAA9FbGl4aXIuRGF0ZVRpbWVkAAhjYWxlbmRhcmQAE0VsaXhpci5DYWxlbmRhci5JU09kAANkYXlhCmQABGhvdXJhDmQAC21pY3Jvc2Vjb25kaAJhAGEAZAAGbWludXRlYRZkAAVtb250aGEBZAAGc2Vjb25kYQBkAApzdGRfb2Zmc2V0YQBkAAl0aW1lX3pvbmVtAAAAB0V0Yy9VVENkAAp1dGNfb2Zmc2V0YQBkAAR5ZWFyYgAAB-dkAAl6b25lX2FiYnJtAAAAA1VUQw==\",\n    \"total_count\": null\n  }\n}\n"
                  },
                  "last value": {
                    "value": "{\n  \"data\": [\n    {\n      \"name\": \"BoardProbe\",\n      \"value\": 15\n    }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "avg": {
                            "type": "number",
                            "example": -10.29111,
                            "default": 0
                          },
                          "first": {
                            "type": "number",
                            "example": -9.42505,
                            "default": 0
                          },
                          "increment": {
                            "type": "number",
                            "example": 0.5510999999999999,
                            "default": 0
                          },
                          "last": {
                            "type": "number",
                            "example": -11.0206,
                            "default": 0
                          },
                          "max": {
                            "type": "number",
                            "example": -9.42505,
                            "default": 0
                          },
                          "min": {
                            "type": "number",
                            "example": -11.0206,
                            "default": 0
                          },
                          "name": {
                            "type": "string",
                            "example": "BoardProbe"
                          },
                          "sample_count": {
                            "type": "integer",
                            "example": 5,
                            "default": 0
                          },
                          "sum": {
                            "type": "number",
                            "example": -51.45555,
                            "default": 0
                          },
                          "timestamp": {
                            "type": "string",
                            "example": "2023-01-10T14:11:00Z"
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "after": {
                          "type": "string",
                          "example": "g3QAAAACbQAAAARuYW1lbQAAAApCb2FyZFByb2JlbQAAAAl0aW1lc3RhbXB0AAAADWQACl9fc3RydWN0X19kAA9FbGl4aXIuRGF0ZVRpbWVkAAhjYWxlbmRhcmQAE0VsaXhpci5DYWxlbmRhci5JU09kAANkYXlhCmQABGhvdXJhDmQAC21pY3Jvc2Vjb25kaAJhAGEAZAAGbWludXRlYRZkAAVtb250aGEBZAAGc2Vjb25kYQBkAApzdGRfb2Zmc2V0YQBkAAl0aW1lX3pvbmVtAAAAB0V0Yy9VVENkAAp1dGNfb2Zmc2V0YQBkAAR5ZWFyYgAAB-dkAAl6b25lX2FiYnJtAAAAA1VUQw=="
                        },
                        "total_count": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/{device_id}/events": {
      "get": {
        "summary": "Events read",
        "description": "Read events, like pressure alarm or low power alert from a specific device",
        "operationId": "events-read",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "timestamp ISO 8601. E.g. 2021-07-27T00:00:00Z",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "timestamp ISO 8601. E.g. 2021-07-27T00:00:00Z",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "events_names",
            "in": "query",
            "description": "filter using event names",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination parameter. If there are a lot of items only some will be present in data field. To get the remaining items repeat the API call using the after parameter present in the body of the previous request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "severity[]",
            "in": "query",
            "description": "if missing return events with any severity, empty array only events without a severity. Values can be \"alarm\" \"info\" \"warning\"",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "max 1000",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"id\": \"91a74d2b-0148-49dc-a6f0-9c26f6c90743\",\n      \"metadata\": {},\n      \"name\": \"door_open_alarm\",\n      \"timestamp\": \"2022-12-21T13:12:01Z\"\n    }\n  ],\n  \"pagination\": {\n    \"after\": null,\n    \"total_count\": 1\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "91a74d2b-0148-49dc-a6f0-9c26f6c90743"
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {}
                          },
                          "name": {
                            "type": "string",
                            "example": "door_open_alarm"
                          },
                          "timestamp": {
                            "type": "string",
                            "example": "2022-12-21T13:12:01Z"
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "after": {},
                        "total_count": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes/recipe_templates/{recipe_template_id}": {
      "delete": {
        "summary": "Recipe template delete",
        "description": "",
        "operationId": "recipe-template-delete",
        "parameters": [
          {
            "name": "recipe_template_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Recipe template detail",
        "description": "Retrieve the list of recipe templates that the user is allowed to see",
        "operationId": "recipe-template-detail",
        "parameters": [
          {
            "name": "recipe_template_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "include_cookbooks",
            "in": "query",
            "description": "whether to include cookbooks information in the response",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"cookbooks\": null,\n    \"created_by\": null,\n    \"description\": null,\n    \"id\": \"9243648d-f6dc-449b-a4d4-051635ab3039\",\n    \"inserted_at\": \"2022-11-29T10:47:23\",\n    \"last_edited_by\": null,\n    \"machine_model_id\": \"561904ec-e988-4a2f-ac66-eef2ef071b55\",\n    \"metadata\": {\n      \"program_type\": \"chilling\",\n      \"type\": \"custom\"\n    },\n    \"name\": \"Foo\",\n    \"organization_id\": \"9ff5518a-9fe4-11ea-bb37-0242ac130002\",\n    \"phases\": [\n      {\n        \"cell_temperature\": -37,\n        \"core_temperature\": -5,\n        \"evaporator_fan_speed\": 5,\n        \"time_in_minutes\": 16\n      },\n      {\n        \"cell_temperature\": 2,\n        \"evaporator_fan_speed\": 2\n      }\n    ],\n    \"updated_at\": \"2022-11-29T10:47:23\"\n  }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "cookbooks": {},
                        "created_by": {},
                        "description": {},
                        "id": {
                          "type": "string",
                          "example": "9243648d-f6dc-449b-a4d4-051635ab3039"
                        },
                        "inserted_at": {
                          "type": "string",
                          "example": "2022-11-29T10:47:23"
                        },
                        "last_edited_by": {},
                        "machine_model_id": {
                          "type": "string",
                          "example": "561904ec-e988-4a2f-ac66-eef2ef071b55"
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "program_type": {
                              "type": "string",
                              "example": "chilling"
                            },
                            "type": {
                              "type": "string",
                              "example": "custom"
                            }
                          }
                        },
                        "name": {
                          "type": "string",
                          "example": "Foo"
                        },
                        "organization_id": {
                          "type": "string",
                          "example": "9ff5518a-9fe4-11ea-bb37-0242ac130002"
                        },
                        "phases": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "cell_temperature": {
                                "type": "integer",
                                "example": -37,
                                "default": 0
                              },
                              "core_temperature": {
                                "type": "integer",
                                "example": -5,
                                "default": 0
                              },
                              "evaporator_fan_speed": {
                                "type": "integer",
                                "example": 5,
                                "default": 0
                              },
                              "time_in_minutes": {
                                "type": "integer",
                                "example": 16,
                                "default": 0
                              }
                            }
                          }
                        },
                        "updated_at": {
                          "type": "string",
                          "example": "2022-11-29T10:47:23"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes/cookbooks_recipe_templates": {
      "delete": {
        "summary": "Cookbook-recipe-template, delete",
        "description": "Remove a recipe template from a cookbook",
        "operationId": "cookbook-recipe-template-delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cookbook_id": {
                    "type": "string"
                  },
                  "recipe_template_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "cookbook-recipe-template-change-recipe-template-index",
        "description": "Change the index of a cookbook recipe",
        "operationId": "cookbook-recipe-template-change-recipe-template-index",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes/cookbooks/{cookbook_id}/add_recipe_templates": {
      "post": {
        "summary": "Recipe template add to cookbook",
        "description": "",
        "operationId": "recipe-template-add-to-cookbook",
        "parameters": [
          {
            "name": "cookbook_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recipe_template_ids": {
                    "type": "array",
                    "description": "the list of recipe ids to add to the cookbook",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/{device_id}": {
      "get": {
        "summary": "Device details",
        "description": "",
        "operationId": "device-details",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "include_machine_model",
            "in": "query",
            "description": "Includes the machine model in the body response",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "include_machines_group",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"active\": false,\n    \"id\": \"e1b01960-c257-41f2-886e-c6668fb49e51\",\n    \"is_connected\": true,\n    \"last_seen\": \"2023-02-06T08:41:57Z\",\n    \"machine_firmware_id\": \"c6ab4a8f-33a3-43aa-8b81-3e0d7666c395\",\n    \"name\": \"CHDG1VA - 4324\",\n    \"serial\": \"UT020178773\",\n    \"machine_model\": {\n      \"id\": \"4dc3de51-4fb5-45fa-96b6-7ac570fc2cc0\",\n      \"identifier\": \"machine_model_identifier-8\",\n      \"machine_firmwares\": null,\n      \"main_firmware\": null,\n      \"name\": \"machine_model_name-8\",\n      \"image\": \"https://imageurl/file.png\"\n    },\n    \"machines_groups\": {\n      \"category\": null,\n      \"category_id\": \"19127fd9-46dc-48b9-bca6-935f13e71e7e\",\n      \"id\": \"ed6e122d-954b-42f3-accc-7f7be4717ea4\",\n      \"machines\": null,\n      \"name\": \"Collaudo Fabrika.\",\n      \"organization_id\": \"82a0e3fe-d553-42ba-a5dc-48ed221c5c8f\",\n      \"parent_id\": null\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "id": {
                          "type": "string",
                          "example": "e1b01960-c257-41f2-886e-c6668fb49e51"
                        },
                        "is_connected": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "last_seen": {
                          "type": "string",
                          "example": "2023-02-06T08:41:57Z"
                        },
                        "machine_firmware_id": {
                          "type": "string",
                          "example": "c6ab4a8f-33a3-43aa-8b81-3e0d7666c395"
                        },
                        "name": {
                          "type": "string",
                          "example": "CHDG1VA - 4324"
                        },
                        "serial": {
                          "type": "string",
                          "example": "UT020178773"
                        },
                        "machine_model": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "4dc3de51-4fb5-45fa-96b6-7ac570fc2cc0"
                            },
                            "identifier": {
                              "type": "string",
                              "example": "machine_model_identifier-8"
                            },
                            "machine_firmwares": {},
                            "main_firmware": {},
                            "name": {
                              "type": "string",
                              "example": "machine_model_name-8"
                            },
                            "image": {
                              "type": "string",
                              "example": "https://imageurl/file.png"
                            }
                          }
                        },
                        "machines_groups": {
                          "type": "object",
                          "properties": {
                            "category": {},
                            "category_id": {
                              "type": "string",
                              "example": "19127fd9-46dc-48b9-bca6-935f13e71e7e"
                            },
                            "id": {
                              "type": "string",
                              "example": "ed6e122d-954b-42f3-accc-7f7be4717ea4"
                            },
                            "machines": {},
                            "name": {
                              "type": "string",
                              "example": "Collaudo Fabrika."
                            },
                            "organization_id": {
                              "type": "string",
                              "example": "82a0e3fe-d553-42ba-a5dc-48ed221c5c8f"
                            },
                            "parent_id": {}
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Device update",
        "description": "",
        "operationId": "device-update",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "machine": {
                    "type": "object",
                    "properties": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/{device_id}/parameters": {
      "get": {
        "summary": "Parameters read",
        "description": "",
        "operationId": "parameters-read",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "configuration_filter[]",
            "in": "query",
            "description": "Return only the parameters specified in this filter",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"assets\": [\n    {\n      \"name\": \"configuration\",\n      \"values\": [\n        {\n          \"name\": \"CA1\",\n          \"type\": \"integer\",\n          \"value\": \"-1\"\n        }\n      ]\n    }\n  ],\n  \"errors\": []\n}\n"
                  },
                  "200 with errors": {
                    "value": "{\n  \"assets\": [\n    {\n      \"name\": \"configuration\",\n      \"values\": []\n    }\n  ],\n  \"errors\": [\"Could not read from serial bus\"]\n}\n"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "assets": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "configuration"
                              },
                              "values": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "example": "CA1"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    },
                                    "value": {
                                      "type": "string",
                                      "example": "-1"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "array"
                        }
                      }
                    },
                    {
                      "title": "200 with errors",
                      "type": "object",
                      "properties": {
                        "assets": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "configuration"
                              },
                              "values": {
                                "type": "array"
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "Could not read from serial bus"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Parameters write",
        "description": "",
        "operationId": "parameters-write",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "assets": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string",
                          "default": "configuration"
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Parameter's Name"
                              },
                              "type": {
                                "type": "string",
                                "description": "Parameter's Type"
                              },
                              "value": {
                                "type": "string",
                                "description": "Write the number if an Integer/Float/Boolean"
                              }
                            },
                            "required": [
                              "name",
                              "type",
                              "value"
                            ],
                            "type": "object"
                          }
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "type": "object"
                    }
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "assets": [
                      {
                        "name": "configuration",
                        "values": [
                          {
                            "name": "test1",
                            "type": "integer",
                            "value": "1200"
                          },
                          {
                            "name": "test2",
                            "type": "integer",
                            "value": "6"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"assets\": [\n    {\n      \"name\": \"configuration\",\n      \"values\": [\n        {\n          \"name\": \"CA1\",\n          \"type\": \"integer\",\n          \"value\": \"-1\"\n        }\n      ]\n    }\n  ],\n  \"errors\": []\n}\n"
                  },
                  "200 with errors": {
                    "value": "{\n  \"assets\": [\n    {\n      \"name\": \"configuration\",\n      \"values\": []\n    }\n  ],\n  \"errors\": [\"Could not read from serial bus\"]\n}\n"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "assets": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "configuration"
                              },
                              "values": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "example": "CA1"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    },
                                    "value": {
                                      "type": "string",
                                      "example": "-1"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "array"
                        }
                      }
                    },
                    {
                      "title": "200 with errors",
                      "type": "object",
                      "properties": {
                        "assets": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "configuration"
                              },
                              "values": {
                                "type": "array"
                              }
                            }
                          }
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "Could not read from serial bus"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/machine_models": {
      "get": {
        "summary": "Device models list",
        "description": "Retrieve the list of device models belonging to an organization.\nIf the user is admin all models will be returned.\nIf the user is standard only the models for which there are devices that user can see will be returned.",
        "operationId": "device-models-list",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "the organization id can be obtained with _[organizations list](ref:organizations-list)_",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"id\": \"7dcac565-5e7f-40b3-8992-71dfe8ef7d10\",\n      \"identifier\": \"GT3\",\n      \"image\": \"https://assets.things5.digital/assets/uploads/machine_models/asdf3241.jpg?v=63812225444\",\n      \"main_firmware\": {\n        \"archived\": true,\n        \"build\": null,\n        \"draft\": false,\n        \"id\": \"239d6c0e-d606-460b-9407-8afbd7e24c5e\",\n        \"major\": 1,\n        \"minor\": 0,\n        \"patch\": 0,\n        \"version\": \"1.0.0\"\n      },\n      \"name\": \"GT3 | Fermalievita\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "7dcac565-5e7f-40b3-8992-71dfe8ef7d10"
                          },
                          "identifier": {
                            "type": "string",
                            "example": "GT3"
                          },
                          "image": {
                            "type": "string",
                            "example": "https://assets.things5.digital/assets/uploads/machine_models/asdf3241.jpg?v=63812225444"
                          },
                          "main_firmware": {
                            "type": "object",
                            "properties": {
                              "archived": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "build": {},
                              "draft": {
                                "type": "boolean",
                                "example": false,
                                "default": true
                              },
                              "id": {
                                "type": "string",
                                "example": "239d6c0e-d606-460b-9407-8afbd7e24c5e"
                              },
                              "major": {
                                "type": "integer",
                                "example": 1,
                                "default": 0
                              },
                              "minor": {
                                "type": "integer",
                                "example": 0,
                                "default": 0
                              },
                              "patch": {
                                "type": "integer",
                                "example": 0,
                                "default": 0
                              },
                              "version": {
                                "type": "string",
                                "example": "1.0.0"
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "example": "GT3 | Fermalievita"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations": {
      "get": {
        "summary": "List",
        "description": "Retrieve the list of organizations the user belongs to",
        "operationId": "organizations-list",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"id\": \"10c1f84a-264c-4a13-857f-92f567a6c857\",\n      \"name\": \"Foo\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "10c1f84a-264c-4a13-857f-92f567a6c857"
                          },
                          "name": {
                            "type": "string",
                            "example": "Foo"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/machine_models/{machine_model_id}/machine_firmwares": {
      "get": {
        "summary": "List",
        "description": "Retrieve the list of devices firmwares belonging to a machine model. In order to see device firmwares the user must have *manage devices* and *update machines firmware* permissions",
        "operationId": "device-firmwares-list",
        "parameters": [
          {
            "name": "machine_model_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"archived\": true,\n      \"build\": null,\n      \"draft\": false,\n      \"id\": \"239d6c0e-d606-460b-9407-8afbd7e24c5e\",\n      \"major\": 1,\n      \"minor\": 0,\n      \"patch\": 0,\n      \"version\": \"1.0.0\"\n    }\n  ]\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "archived": {
                            "type": "boolean",
                            "example": true,
                            "default": true
                          },
                          "build": {},
                          "draft": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          },
                          "id": {
                            "type": "string",
                            "example": "239d6c0e-d606-460b-9407-8afbd7e24c5e"
                          },
                          "major": {
                            "type": "integer",
                            "example": 1,
                            "default": 0
                          },
                          "minor": {
                            "type": "integer",
                            "example": 0,
                            "default": 0
                          },
                          "patch": {
                            "type": "integer",
                            "example": 0,
                            "default": 0
                          },
                          "version": {
                            "type": "string",
                            "example": "1.0.0"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/machine_models/{machine_model_id}": {
      "get": {
        "summary": "Device model detail",
        "description": "",
        "operationId": "device-model-detail",
        "parameters": [
          {
            "name": "machine_model_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "include_machines_firmwares",
            "in": "query",
            "description": "include field machine_firmwares in response",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"id\": \"d1fdcfaf-05bc-4c09-a3a3-e1e8da9ae2e5\",\n    \"identifier\": \"GH3\",\n    \"image\": \"https://assets.things5.digital/assets/uploads/machine_models/34rfads.jpg?v=63812225444\",\n    \"main_firmware\": {\n      \"archived\": true,\n      \"build\": null,\n      \"draft\": false,\n      \"id\": \" 239d6c0e-d606-460b-9407-8afbd7e24c5e\",\n      \"major\": 1,\n      \"minor\": 0,\n      \"patch\": 0,\n      \"version\": \"1.0.0\"\n    },\n    \"machine_firmwares\": [{\n      \"archived\": false,\n      \"build\": null,\n      \"draft\": false,\n      \"id\": \"f0185cac-820a-41a8-8d0e-4fe2c6a77916\",\n      \"major\": 5,\n      \"minor\": 0,\n      \"patch\": 0,\n      \"version\": \"5.0.0\"\n    }]\n    \"name\": \"GH3 | Fermalievita\"\n  }\n}\n"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update",
        "description": "",
        "operationId": "device-model-update",
        "parameters": [
          {
            "name": "machine_model_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "machine_model": {
                    "properties": {
                      "name": {
                        "type": "object",
                        "properties": {}
                      },
                      "main_firmware_id": {
                        "type": "string"
                      },
                      "identifier": {
                        "type": "string"
                      },
                      "firmware_upgradable": {
                        "type": "boolean"
                      },
                      "supports_recipes": {
                        "type": "boolean"
                      },
                      "image": {
                        "type": "string"
                      },
                      "haccp_enabled": {
                        "type": "boolean"
                      },
                      "haccp_interval": {
                        "type": "integer",
                        "description": "haccp interval in minutes",
                        "format": "int32"
                      },
                      "realtime_monitoring_interval_seconds": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "write_only_changed_parameters": {
                        "type": "boolean",
                        "description": "when making parameter write request send only changed values"
                      },
                      "show_gaps": {
                        "type": "boolean",
                        "description": "in monitoring page show gaps in the chart if data is not available"
                      },
                      "parameters_selective_reading": {
                        "type": "boolean",
                        "description": "when making a parameters read request in the device detail page, request only a subset of the parameters and not all of them when the page is loaded"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/machines_groups": {
      "get": {
        "summary": "List",
        "description": "Get a list of all devices groups",
        "operationId": "devices-groups-list",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "parent_group_id",
            "in": "query",
            "description": "filter groups by parent",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"category\": {\n        \"id\": \"03dba360-fd18-4d3e-a5c8-0f4aedc3cd44\",\n        \"name\": \"Cliente finale\",\n        \"parent_id\": \"5fe9af79-2b53-4223-b5c5-9a83cb98a496\"\n      },\n      \"category_id\": \"54d0a956-aea6-493b-9f6a-1318dc61178d\",\n      \"id\": \"9ee06c44-098e-4a68-a882-2d5c7757eb42\",\n      \"name\": \"Foo\",\n      \"organization_id\": \"2ed086da-8350-48d8-96ac-97d47da97f2d\",\n      \"parent_id\": \"cf0cd192-e98c-4ad6-b660-d7aed97fabea\"\n    }\n  ]\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "category": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "03dba360-fd18-4d3e-a5c8-0f4aedc3cd44"
                              },
                              "name": {
                                "type": "string",
                                "example": "Cliente finale"
                              },
                              "parent_id": {
                                "type": "string",
                                "example": "5fe9af79-2b53-4223-b5c5-9a83cb98a496"
                              }
                            }
                          },
                          "category_id": {
                            "type": "string",
                            "example": "54d0a956-aea6-493b-9f6a-1318dc61178d"
                          },
                          "id": {
                            "type": "string",
                            "example": "9ee06c44-098e-4a68-a882-2d5c7757eb42"
                          },
                          "name": {
                            "type": "string",
                            "example": "Foo"
                          },
                          "organization_id": {
                            "type": "string",
                            "example": "2ed086da-8350-48d8-96ac-97d47da97f2d"
                          },
                          "parent_id": {
                            "type": "string",
                            "example": "cf0cd192-e98c-4ad6-b660-d7aed97fabea"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create",
        "description": "",
        "operationId": "devices-group-create",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "machines_group"
                ],
                "properties": {
                  "machines_group": {
                    "type": "object",
                    "properties": {
                      "category_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "parent_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"category\": null,\n    \"category_id\": \"8979a8b8-ab62-4275-96d6-b2b4d5f4e436\",\n    \"id\": \"474a2486-bb12-4e45-8460-be312cf73f80\",\n    \"machines\": null,\n    \"name\": \"random name\",\n    \"organization_id\": \"82a0e3fe-d553-42ba-a5dc-48ed221c5c8f\",\n    \"parent_id\": \"9844077f-1f92-49df-9246-d14d6965696a\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "category": {},
                        "category_id": {
                          "type": "string",
                          "example": "8979a8b8-ab62-4275-96d6-b2b4d5f4e436"
                        },
                        "id": {
                          "type": "string",
                          "example": "474a2486-bb12-4e45-8460-be312cf73f80"
                        },
                        "machines": {},
                        "name": {
                          "type": "string",
                          "example": "random name"
                        },
                        "organization_id": {
                          "type": "string",
                          "example": "82a0e3fe-d553-42ba-a5dc-48ed221c5c8f"
                        },
                        "parent_id": {
                          "type": "string",
                          "example": "9844077f-1f92-49df-9246-d14d6965696a"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/machines_machines_groups": {
      "post": {
        "summary": "Create",
        "description": "Create an association between a device and a devices group. It is used to insert a device in a specific group. A device can have only a group, so if it's already associated with a device group, the previous association will be deleted",
        "operationId": "device-devices-group-association-create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "machine_id",
                  "machines_group_id"
                ],
                "properties": {
                  "machine_id": {
                    "type": "string"
                  },
                  "machines_group_id": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "machine_id": "2ed086da-8350-48d8-96ac-97d47da97f2d",
                    "machines_group_id": "9ee06c44-098e-4a68-a882-2d5c7757eb42"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/{device_id}/haccp": {
      "get": {
        "summary": "HACCP device",
        "description": "List device haccp info\nTime format is ISO 8601 https://en.wikipedia.org/wiki/ISO_8601",
        "operationId": "haccp-list",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "from",
            "in": "query",
            "description": "e.g. 2023-01-30T09:50:05.448Z",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "e.g. 2023-01-30T09:50:05.448Z",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "description": "how to sort items in response",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"end_timestamp\": null,\n      \"metadata\": {},\n      \"name\": \"t_room\",\n      \"state_aggregates\": null,\n      \"timestamp\": \"2023-02-06T09:00:00.000Z\",\n      \"translation\": \"Temperatura cella\",\n      \"type\": \"metric\",\n      \"value\": 3.0416666666666665\n    },\n     {\n       \"description\": null,\n       \"end_timestamp\": \"2023-03-08T18:10:08Z\",\n       \"has_start_end\": true,\n       \"metadata\": {},\n       \"name\": \"material\",\n       \"state_aggregates\": null,\n       \"timestamp\": \"2023-03-08T18:10:08.000Z\",\n       \"translation\": \"Porta\",\n       \"type\": \"state_close\",\n       \"value\": \"Aperta\"\n     },\n  ],\n  \"pagination\": {\n    \"after\": \"g3QAAAADZAAEbmFtZW0AAAADaHVtZAAJdGltZXN0YW1wdAAAAA1kAApfX3N0cnVjdF9fZAAPRWxpeGlyLkRhdGVUaW1lZAAIY2FsZW5kYXJkABNFbGl4aXIuQ2FsZW5kYXIuSVNPZAADZGF5YQRkAARob3VyYQhkAAttaWNyb3NlY29uZGgCYQBhA2QABm1pbnV0ZWEAZAAFbW9udGhhAmQABnNlY29uZGEAZAAKc3RkX29mZnNldGEAZAAJdGltZV96b25lbQAAAAdFdGMvVVRDZAAKdXRjX29mZnNldGEAZAAEeWVhcmIAAAfnZAAJem9uZV9hYmJybQAAAANVVENkAAR0eXBlbQAAAAZtZXRyaWM=\",\n    \"total_count\": 1503\n  }\n}\n"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/diagnostic_dashboards": {
      "get": {
        "summary": "Diagnostic dashboard list",
        "description": "",
        "operationId": "diagnostic-dashboard-list",
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"id\": \"500c6aae-f862-4f59-8578-f32932e3752b\",\n      \"machine_id\": \"04240363-2669-4b60-a349-dd87c40a3dd5\",\n      \"machine\": {},\n      \"name\": \"diagnostic-dashboard-125\",\n      \"ui_json\": null\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "500c6aae-f862-4f59-8578-f32932e3752b"
                          },
                          "machine_id": {
                            "type": "string",
                            "example": "04240363-2669-4b60-a349-dd87c40a3dd5"
                          },
                          "machine": {
                            "type": "object",
                            "properties": {}
                          },
                          "name": {
                            "type": "string",
                            "example": "diagnostic-dashboard-125"
                          },
                          "ui_json": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Diagnostic Dashboard create",
        "description": "",
        "operationId": "diagnostic-dashboard-create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "diagnostic_dashboard": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "from": {
                        "type": "string",
                        "description": "timestamp ISO 8601. E.g. 2021-07-27T00:00:00Z",
                        "format": "date"
                      },
                      "to": {
                        "type": "string",
                        "description": "timestamp ISO 8601. E.g. 2021-07-27T00:00:00Z",
                        "format": "date"
                      },
                      "time_interval_id": {
                        "type": "string",
                        "description": "cannot be set if from/to are set",
                        "enum": [
                          "last_2_days",
                          "last_7_days",
                          "last_30_days",
                          "last_90_days",
                          "last_6_months",
                          "beginning_of_1_day_ago_to_beginning_of_0_day_ago",
                          "beginning_of_2_day_ago_to_beginning_of_1_day_ago",
                          "beginning_of_1_week_ago_to_beginning_of_0_week_ago",
                          "beginning_of_1_month_ago_to_beginning_of_0_month_ago",
                          "beginning_of_1_year_ago_to_beginning_of_0_year_ago",
                          "this_day",
                          "this_week",
                          "this_month",
                          "this_year",
                          "last_1_hours",
                          "last_3_hours",
                          "last_6_hours",
                          "last_12_hours",
                          "last_24_hours",
                          ""
                        ]
                      },
                      "ui_json": {
                        "type": "object",
                        "description": "json rappresentation of frontend dashboard",
                        "properties": {}
                      },
                      "machine_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"id\": \"9d5ff177-ef6d-4f2b-8531-4ab54f513684\",\n    \"name\": \"name\",\n    \"machine_id\": \"ff09740d-c328-440e-bc91-b44e4306a2e1\",\n    \"time_interval_id\": \"last_2_days\",\n    \"ui_json\": {}\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "9d5ff177-ef6d-4f2b-8531-4ab54f513684"
                        },
                        "name": {
                          "type": "string",
                          "example": "name"
                        },
                        "machine_id": {
                          "type": "string",
                          "example": "ff09740d-c328-440e-bc91-b44e4306a2e1"
                        },
                        "time_interval_id": {
                          "type": "string",
                          "example": "last_2_days"
                        },
                        "ui_json": {
                          "type": "object",
                          "properties": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/diagnostic_dashboards/{diagnostic_dashboard_id}": {
      "get": {
        "summary": "Diagnostic Dashboard",
        "description": "",
        "operationId": "diagnostic-dashboard-1",
        "parameters": [
          {
            "name": "diagnostic_dashboard_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"diagnostic_dashboard_widgets\": [\n      {\n        \"id\": \"d72b6c4f-5cc0-4ea3-9478-f526c6001d32\",\n        \"machine_variables\": [\n          {\n            \"id\": \"9a61d001-f98b-4894-abbf-3efbb30633fe\",\n            \"label\": null,\n            \"name\": \"variable-2\",\n            \"source\": \"metrics\",\n            \"type\": \"integer\",\n            \"ui_unit\": null,\n            \"unit\": null\n          }\n        ],\n        \"name\": \"widget-136\",\n        \"type\": \"metrics\"\n      }\n    ],\n    \"from\": null,\n    \"id\": \"b7925b84-8347-4bfd-a955-f877750149af\",\n    \"machine_id\": \"3e9eb098-c905-431c-bc0a-4b534de58d49\",\n    \"name\": \"diagnostic-dashboard-129\",\n    \"time_interval_id\": \"last_2_days\",\n    \"to\": null,\n    \"ui_json\": null\n  }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "diagnostic_dashboard_widgets": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "d72b6c4f-5cc0-4ea3-9478-f526c6001d32"
                              },
                              "machine_variables": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": "9a61d001-f98b-4894-abbf-3efbb30633fe"
                                    },
                                    "label": {},
                                    "name": {
                                      "type": "string",
                                      "example": "variable-2"
                                    },
                                    "source": {
                                      "type": "string",
                                      "example": "metrics"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    },
                                    "ui_unit": {},
                                    "unit": {}
                                  }
                                }
                              },
                              "name": {
                                "type": "string",
                                "example": "widget-136"
                              },
                              "type": {
                                "type": "string",
                                "example": "metrics"
                              }
                            }
                          }
                        },
                        "from": {},
                        "id": {
                          "type": "string",
                          "example": "b7925b84-8347-4bfd-a955-f877750149af"
                        },
                        "machine_id": {
                          "type": "string",
                          "example": "3e9eb098-c905-431c-bc0a-4b534de58d49"
                        },
                        "name": {
                          "type": "string",
                          "example": "diagnostic-dashboard-129"
                        },
                        "time_interval_id": {
                          "type": "string",
                          "example": "last_2_days"
                        },
                        "to": {},
                        "ui_json": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Diagnostic Dashboard update",
        "description": "",
        "operationId": "diagnostic-dashboard-update",
        "parameters": [
          {
            "name": "diagnostic_dashboard_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "diagnostic_dashboard"
                ],
                "properties": {
                  "diagnostic_dashboard": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "from": {
                        "type": "string",
                        "description": "timestamp ISO 8601. E.g. 2021-07-27T00:00:00Z",
                        "format": "date"
                      },
                      "to": {
                        "type": "string",
                        "description": "timestamp ISO 8601. E.g. 2021-07-27T00:00:00Z",
                        "format": "date"
                      },
                      "time_interval_id": {
                        "type": "string",
                        "description": "cannot be set if from/to are set",
                        "enum": [
                          "last_2_days",
                          "last_7_days",
                          "last_30_days",
                          "last_90_days",
                          "last_6_months",
                          "beginning_of_1_day_ago_to_beginning_of_0_day_ago",
                          "beginning_of_2_day_ago_to_beginning_of_1_day_ago",
                          "beginning_of_1_week_ago_to_beginning_of_0_week_ago",
                          "beginning_of_1_month_ago_to_beginning_of_0_month_ago",
                          "beginning_of_1_year_ago_to_beginning_of_0_year_ago",
                          "this_day",
                          "this_week",
                          "this_month",
                          "this_year",
                          "last_1_hours",
                          "last_3_hours",
                          "last_6_hours",
                          "last_12_hours",
                          "last_24_hours",
                          ""
                        ]
                      },
                      "ui_json": {
                        "type": "object",
                        "description": "json rappresentation of frontend dashboard",
                        "properties": {}
                      },
                      "machine_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"id\": \"b7925b84-8347-4bfd-a955-f877750149af\",\n    \"machine_id\": \"3e9eb098-c905-431c-bc0a-4b534de58d49\",\n    \"machine\": {},\n    \"name\": \"diagnostic-dashboard-129\",\n    \"ui_json\": {}\n  }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "b7925b84-8347-4bfd-a955-f877750149af"
                        },
                        "machine_id": {
                          "type": "string",
                          "example": "3e9eb098-c905-431c-bc0a-4b534de58d49"
                        },
                        "machine": {
                          "type": "object",
                          "properties": {}
                        },
                        "name": {
                          "type": "string",
                          "example": "diagnostic-dashboard-129"
                        },
                        "ui_json": {
                          "type": "object",
                          "properties": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Diagnostic Dashboard delete",
        "description": "",
        "operationId": "diagnostic-dashboard-delete",
        "parameters": [
          {
            "name": "diagnostic_dashboard_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/diagnostic_dashboards/{diagnostic_dashboard_id}/diagnostic_dashboard_widgets": {
      "post": {
        "summary": "Diagnostic Dashboard Widget create",
        "description": "",
        "operationId": "diagnostic-dashboard-widget-create",
        "parameters": [
          {
            "name": "diagnostic_dashboard_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "diagnostic_dashboard_widget",
            "in": "header",
            "schema": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "metrics",
                    "states",
                    "events"
                  ]
                },
                "machine_variable_ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "name",
                "type"
              ],
              "type": "object"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "diagnostic_dashboard_widget": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"id\": \"155c5217-c4eb-4f3d-851b-eb928094f9a8\",\n    \"name\": \"widget-97\",\n    \"type\": \"metrics\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "155c5217-c4eb-4f3d-851b-eb928094f9a8"
                        },
                        "name": {
                          "type": "string",
                          "example": "widget-97"
                        },
                        "type": {
                          "type": "string",
                          "example": "metrics"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/diagnostic_dashboards/{diagnostic_dashboard_id}/diagnostic_dashboard_widgets/{diagnostic_dashboard_widget_id}": {
      "patch": {
        "summary": "Diagnostic Dashboard Widget update",
        "description": "",
        "operationId": "diagnostic-dashboard-widget-update",
        "parameters": [
          {
            "name": "diagnostic_dashboard_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "diagnostic_dashboard_widget_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "diagnostic_dashboard_widget": {
                    "type": "object",
                    "required": [
                      "name",
                      "type"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "metrics",
                          "states",
                          "events"
                        ]
                      },
                      "machine_variable_ids": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"id\": \"155c5217-c4eb-4f3d-851b-eb928094f9a8\",\n    \"name\": \"widget-97\",\n    \"type\": \"metrics\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "155c5217-c4eb-4f3d-851b-eb928094f9a8"
                        },
                        "name": {
                          "type": "string",
                          "example": "widget-97"
                        },
                        "type": {
                          "type": "string",
                          "example": "metrics"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Diagnostic Dashboard Widget delete",
        "description": "",
        "operationId": "diagnostic-dashboard-widget-delete",
        "parameters": [
          {
            "name": "diagnostic_dashboard_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "diagnostic_dashboard_widget_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/{device_id}/firmware_update": {
      "post": {
        "summary": "Firmware update request",
        "description": "Request a firmware update on a device",
        "operationId": "device-firmware-update-request",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "firmware_id"
                ],
                "properties": {
                  "firmware_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n\t\"message\": \"upgrade_in_progress\"\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "upgrade_in_progress"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/users/{user_id}": {
      "patch": {
        "summary": "User update",
        "description": "",
        "operationId": "user-update",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "user"
                ],
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "language": {
                        "type": "string",
                        "enum": [
                          "it",
                          "en",
                          "de",
                          "fr",
                          "es"
                        ]
                      },
                      "user_organization": {
                        "type": "object",
                        "properties": {
                          "custom_attributes": {
                            "type": "string",
                            "description": "can be any key value pair as long as it's defined in organization custom attributes. E.g. {\"phone_number\": \"+393495726284\"}}",
                            "format": "json"
                          }
                        }
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "user": {
                      "user_organization": {
                        "custom_attributes": {
                          "phone": "3491234567",
                          "address": "gray st 56"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"client_id\": \"frontend\",\n    \"email\": \"email-19@example.com\",\n    \"email_notifications_enabled\": false,\n    \"enabled_notifications\": [],\n    \"first_name\": \"first_name-89\",\n    \"id\": \"493c3aa2-135a-4d1a-b2ae-6ac120776cfa\",\n    \"language\": \"it\",\n    \"last_name\": \"last_name-90\",\n    \"mobile_notifications_enabled\": false,\n    \"telegram_notifications_enabled\": false,\n    \"user_organization\": {\n      \"organization_id\": \"bf79c728-6396-4f6d-9043-f887e582ec4e\",\n      \"permissions\": [],\n      \"role_id\": \"bc9f0ea0-40fc-4238-821b-3310a1c9df86\",\n      \"custom_attributes\": {\n        \"phone\": \"3491234567\",\n        \"address\": \"gray st 56\"\n    \t}\n    },\n    \"web_notifications_enabled\": false\n  }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "client_id": {
                          "type": "string",
                          "example": "frontend"
                        },
                        "email": {
                          "type": "string",
                          "example": "email-19@example.com"
                        },
                        "email_notifications_enabled": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "enabled_notifications": {
                          "type": "array"
                        },
                        "first_name": {
                          "type": "string",
                          "example": "first_name-89"
                        },
                        "id": {
                          "type": "string",
                          "example": "493c3aa2-135a-4d1a-b2ae-6ac120776cfa"
                        },
                        "language": {
                          "type": "string",
                          "example": "it"
                        },
                        "last_name": {
                          "type": "string",
                          "example": "last_name-90"
                        },
                        "mobile_notifications_enabled": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "telegram_notifications_enabled": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "user_organization": {
                          "type": "object",
                          "properties": {
                            "organization_id": {
                              "type": "string",
                              "example": "bf79c728-6396-4f6d-9043-f887e582ec4e"
                            },
                            "permissions": {
                              "type": "array"
                            },
                            "role_id": {
                              "type": "string",
                              "example": "bc9f0ea0-40fc-4238-821b-3310a1c9df86"
                            },
                            "custom_attributes": {
                              "type": "object",
                              "properties": {
                                "phone": {
                                  "type": "string",
                                  "example": "3491234567"
                                },
                                "address": {
                                  "type": "string",
                                  "example": "gray st 56"
                                }
                              }
                            }
                          }
                        },
                        "web_notifications_enabled": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Users detail",
        "description": "",
        "operationId": "users-detail",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"client_id\": \"frontend\",\n    \"email\": \"paolorossi@mail.it\",\n    \"email_notifications_enabled\": false,\n    \"enabled_notifications\": [],\n    \"first_name\": \"Paolo\",\n    \"id\": \"d7d6e87b-ae15-471e-b0d4-58348dc2d8ce\",\n    \"language\": \"it\",\n    \"last_name\": \"Rossi\",\n    \"mobile_notifications_enabled\": false,\n    \"telegram_notifications_enabled\": false,\n    \"user_machine_shares\": [],\n    \"user_machines_groups\": [\n      {\n        \"machines_group_id\": \"56d68f91-e581-4540-a49d-ff7b65b75d97\",\n        \"role\": {\n          \"id\": \"a0fb6fad-26cb-4219-ad3e-9bd665e0b688\",\n          \"name\": \"a\",\n          \"permissions\": [\n            {\n              \"name\": \"machines:view\"\n            },\n            {\n              \"name\": \"machines:create\"\n            }\n          ],\n          \"system\": false,\n          \"users_create_child_roles\": []\n        },\n        \"role_id\": \"a0fb6fad-26cb-4219-ad3e-9bd665e0b688\",\n        \"user_id\": \"d7d6e87b-ae15-471e-b0d4-58348dc2d8ce\"\n      }\n    ],\n    \"user_organization\": {\n      \"custom_attributes\": {\n        \"city\": \"Milan\",\n        \"phone_number\": 34912345678\n      },\n      \"organization_id\": \"82a0e3fe-d553-42ba-a5dc-48ed221c5c8f\",\n      \"permissions\": [],\n      \"role_id\": null\n    },\n    \"web_notifications_enabled\": false\n  }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "client_id": {
                          "type": "string",
                          "example": "frontend"
                        },
                        "email": {
                          "type": "string",
                          "example": "paolorossi@mail.it"
                        },
                        "email_notifications_enabled": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "enabled_notifications": {
                          "type": "array"
                        },
                        "first_name": {
                          "type": "string",
                          "example": "Paolo"
                        },
                        "id": {
                          "type": "string",
                          "example": "d7d6e87b-ae15-471e-b0d4-58348dc2d8ce"
                        },
                        "language": {
                          "type": "string",
                          "example": "it"
                        },
                        "last_name": {
                          "type": "string",
                          "example": "Rossi"
                        },
                        "mobile_notifications_enabled": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "telegram_notifications_enabled": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "user_machine_shares": {
                          "type": "array"
                        },
                        "user_machines_groups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "machines_group_id": {
                                "type": "string",
                                "example": "56d68f91-e581-4540-a49d-ff7b65b75d97"
                              },
                              "role": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "a0fb6fad-26cb-4219-ad3e-9bd665e0b688"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "a"
                                  },
                                  "permissions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "example": "machines:view"
                                        }
                                      }
                                    }
                                  },
                                  "system": {
                                    "type": "boolean",
                                    "example": false,
                                    "default": true
                                  },
                                  "users_create_child_roles": {
                                    "type": "array"
                                  }
                                }
                              },
                              "role_id": {
                                "type": "string",
                                "example": "a0fb6fad-26cb-4219-ad3e-9bd665e0b688"
                              },
                              "user_id": {
                                "type": "string",
                                "example": "d7d6e87b-ae15-471e-b0d4-58348dc2d8ce"
                              }
                            }
                          }
                        },
                        "user_organization": {
                          "type": "object",
                          "properties": {
                            "custom_attributes": {
                              "type": "object",
                              "properties": {
                                "city": {
                                  "type": "string",
                                  "example": "Milan"
                                },
                                "phone_number": {
                                  "type": "integer",
                                  "example": 34912345678,
                                  "default": 0
                                }
                              }
                            },
                            "organization_id": {
                              "type": "string",
                              "example": "82a0e3fe-d553-42ba-a5dc-48ed221c5c8f"
                            },
                            "permissions": {
                              "type": "array"
                            },
                            "role_id": {}
                          }
                        },
                        "web_notifications_enabled": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/machines/{machine_id}/machine_firmware": {
      "get": {
        "summary": "Detail",
        "description": "In order to see device firmware the user must have *manage devices* and *update machines firmware* permissions",
        "operationId": "device-firmware-detail",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "machine_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"archived\": false,\n    \"build\": \"build_5\",\n    \"changelog\": null,\n    \"draft\": false,\n    \"firmware_url\": \"upload_url\",\n    \"id\": \"d505629a-d22e-44ac-bb15-393c833c87b1\",\n    \"insecure_firmware_url\": \"upload_url\",\n    \"inserted_at\": \"2023-09-28T12:47:00\",\n    \"machine_variables\": [\n      {\n        \"access_level\": null,\n        \"category\": null,\n        \"category_original\": null,\n        \"description\": null,\n        \"haccp_start_end\": false,\n        \"haccp_states_aggregates\": {},\n        \"haccp_states_value_filter\": {},\n        \"haccp_values_filter\": [],\n        \"id\": \"bd2f1199-6849-4774-8f2b-067481b8aad6\",\n        \"is_haccp\": false,\n        \"label\": \"variable-2\",\n        \"max\": null,\n        \"min\": null,\n        \"name\": \"variable-2\",\n        \"severity\": \"alarm\",\n        \"source\": \"metrics\",\n        \"static_value\": null,\n        \"type\": \"integer\",\n        \"ui_unit\": \"°C\",\n        \"unit\": \"1/10 °C\",\n        \"values\": [],\n        \"writable\": false\n      }\n    ],\n    \"major\": 5,\n    \"md5\": \"5\",\n    \"minor\": 5,\n    \"patch\": 5,\n    \"size\": 5,\n    \"updated_at\": \"2023-09-28T12:47:00\",\n    \"version\": \"5.5.5.build_5\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "archived": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "build": {
                          "type": "string",
                          "example": "build_5"
                        },
                        "changelog": {},
                        "draft": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "firmware_url": {
                          "type": "string",
                          "example": "upload_url"
                        },
                        "id": {
                          "type": "string",
                          "example": "d505629a-d22e-44ac-bb15-393c833c87b1"
                        },
                        "insecure_firmware_url": {
                          "type": "string",
                          "example": "upload_url"
                        },
                        "inserted_at": {
                          "type": "string",
                          "example": "2023-09-28T12:47:00"
                        },
                        "machine_variables": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "access_level": {},
                              "category": {},
                              "category_original": {},
                              "description": {},
                              "haccp_start_end": {
                                "type": "boolean",
                                "example": false,
                                "default": true
                              },
                              "haccp_states_aggregates": {
                                "type": "object",
                                "properties": {}
                              },
                              "haccp_states_value_filter": {
                                "type": "object",
                                "properties": {}
                              },
                              "haccp_values_filter": {
                                "type": "array"
                              },
                              "id": {
                                "type": "string",
                                "example": "bd2f1199-6849-4774-8f2b-067481b8aad6"
                              },
                              "is_haccp": {
                                "type": "boolean",
                                "example": false,
                                "default": true
                              },
                              "label": {
                                "type": "string",
                                "example": "variable-2"
                              },
                              "max": {},
                              "min": {},
                              "name": {
                                "type": "string",
                                "example": "variable-2"
                              },
                              "severity": {
                                "type": "string",
                                "example": "alarm"
                              },
                              "source": {
                                "type": "string",
                                "example": "metrics"
                              },
                              "static_value": {},
                              "type": {
                                "type": "string",
                                "example": "integer"
                              },
                              "ui_unit": {
                                "type": "string",
                                "example": "°C"
                              },
                              "unit": {
                                "type": "string",
                                "example": "1/10 °C"
                              },
                              "values": {
                                "type": "array"
                              },
                              "writable": {
                                "type": "boolean",
                                "example": false,
                                "default": true
                              }
                            }
                          }
                        },
                        "major": {
                          "type": "integer",
                          "example": 5,
                          "default": 0
                        },
                        "md5": {
                          "type": "string",
                          "example": "5"
                        },
                        "minor": {
                          "type": "integer",
                          "example": 5,
                          "default": 0
                        },
                        "patch": {
                          "type": "integer",
                          "example": 5,
                          "default": 0
                        },
                        "size": {
                          "type": "integer",
                          "example": 5,
                          "default": 0
                        },
                        "updated_at": {
                          "type": "string",
                          "example": "2023-09-28T12:47:00"
                        },
                        "version": {
                          "type": "string",
                          "example": "5.5.5.build_5"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/update_current_user": {
      "patch": {
        "summary": "Current user update",
        "description": "",
        "operationId": "current-user-update",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "user"
                ],
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "language": {
                        "type": "string",
                        "enum": [
                          "it",
                          "en",
                          "de",
                          "fr",
                          "es"
                        ]
                      },
                      "user_organization": {
                        "type": "object",
                        "properties": {
                          "custom_attributes": {
                            "type": "string",
                            "description": "can be any key value pair as long as it's defined in organization custom attributes. E.g. {\"phone_number\": \"+393495726284\"}}",
                            "format": "json"
                          }
                        }
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"client_id\": \"frontend\",\n    \"email\": \"email-19@example.com\",\n    \"email_notifications_enabled\": false,\n    \"enabled_notifications\": [],\n    \"first_name\": \"first_name-89\",\n    \"id\": \"493c3aa2-135a-4d1a-b2ae-6ac120776cfa\",\n    \"language\": \"it\",\n    \"last_name\": \"last_name-90\",\n    \"mobile_notifications_enabled\": false,\n    \"telegram_notifications_enabled\": false,\n    \"user_organization\": {\n      \"organization_id\": \"bf79c728-6396-4f6d-9043-f887e582ec4e\",\n      \"permissions\": [],\n      \"role_id\": \"bc9f0ea0-40fc-4238-821b-3310a1c9df86\"\n    },\n    \"web_notifications_enabled\": false\n  }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "client_id": {
                          "type": "string",
                          "example": "frontend"
                        },
                        "email": {
                          "type": "string",
                          "example": "email-19@example.com"
                        },
                        "email_notifications_enabled": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "enabled_notifications": {
                          "type": "array"
                        },
                        "first_name": {
                          "type": "string",
                          "example": "first_name-89"
                        },
                        "id": {
                          "type": "string",
                          "example": "493c3aa2-135a-4d1a-b2ae-6ac120776cfa"
                        },
                        "language": {
                          "type": "string",
                          "example": "it"
                        },
                        "last_name": {
                          "type": "string",
                          "example": "last_name-90"
                        },
                        "mobile_notifications_enabled": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "telegram_notifications_enabled": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "user_organization": {
                          "type": "object",
                          "properties": {
                            "organization_id": {
                              "type": "string",
                              "example": "bf79c728-6396-4f6d-9043-f887e582ec4e"
                            },
                            "permissions": {
                              "type": "array"
                            },
                            "role_id": {
                              "type": "string",
                              "example": "bc9f0ea0-40fc-4238-821b-3310a1c9df86"
                            }
                          }
                        },
                        "web_notifications_enabled": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/overview/alarms": {
      "get": {
        "summary": "Alarms",
        "description": "Display the latest events with severity \"alarm\" for user visible devices",
        "operationId": "alarms",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "from",
            "in": "query",
            "description": "2023-10-02T10:17:51.993Z",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "2023-10-05T10:17:51.993Z",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit the results in the response",
            "schema": {
              "type": "string",
              "default": "100"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination parameter. If there are a lot of items only some will be present in data field. To get the remaining items repeat the API call using the after parameter present in the body of the previous request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"description\": null,\n      \"machine\": {\n        \"id\": \"8c4a0f64-9d65-40da-aabc-880937229c82\",\n        \"name\": \"Nome Macchina\",\n        \"serial\": \"FOO\"\n      },\n      \"metadata\": {},\n      \"name\": \"porta aperta\",\n      \"timestamp\": \"2023-10-05T08:24:28Z\"\n    },\n    {\n      \"description\": null,\n      \"machine\": {\n        \"id\": \"eedd39c5-b1ea-4b83-b6f1-ba79ed8afc9e\",\n        \"name\": \"ABC\",\n        \"serial\": \"1234\"\n      },\n      \"metadata\": {},\n      \"name\": \"blackout\",\n      \"timestamp\": \"2023-10-05T09:13:37Z\"\n    }\n  ],\n  \"pagination\": {\n    \"after\": null,\n    \"total_count\": 2\n  }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "description": {},
                          "machine": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "8c4a0f64-9d65-40da-aabc-880937229c82"
                              },
                              "name": {
                                "type": "string",
                                "example": "Nome Macchina"
                              },
                              "serial": {
                                "type": "string",
                                "example": "FOO"
                              }
                            }
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {}
                          },
                          "name": {
                            "type": "string",
                            "example": "porta aperta"
                          },
                          "timestamp": {
                            "type": "string",
                            "example": "2023-10-05T08:24:28Z"
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "after": {},
                        "total_count": {
                          "type": "integer",
                          "example": 2,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/{device_id}/regenerate_certs_v2": {
      "put": {
        "summary": "Device provisioning V2",
        "description": "Generates a device certificate for an already created device on things5. Follow [Device create](ref:device-create) to create a new device.\nOn success returns a zip file containing the certificate files used to connect to the MQTT broker\n\nBE CAREFUL:  Using this resource will invalidate all previous device certificates",
        "operationId": "device-provisioning-copy",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "format": {
                    "type": "string",
                    "description": "can be \"tar\" or \"tar.gz\" otherwise zip will be used",
                    "default": "zip"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "format": "tar.gz"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/devices/{device_id}/notes": {
      "get": {
        "summary": "Notes list",
        "description": "",
        "operationId": "notes-list",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"data\":[{\"content\":\"Compressor replaced\",\"id\":\"393f5c84-7e5d-48b9-9e46-4efcf4d61817\",\"inserted_at\":\"2023-08-08T08:51:34\",\"user\":{\"first_name\":\"Visup\",\"id\":\"cfd20946-9518-43a7-94c4-0ba003249edb\",\"last_name\":\"Admin\"},\"user_id\":\"cfd20946-9518-43a7-94c4-0ba003249edb\"}]}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "content": {
                            "type": "string",
                            "example": "Compressor replaced"
                          },
                          "id": {
                            "type": "string",
                            "example": "393f5c84-7e5d-48b9-9e46-4efcf4d61817"
                          },
                          "inserted_at": {
                            "type": "string",
                            "example": "2023-08-08T08:51:34"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "first_name": {
                                "type": "string",
                                "example": "Visup"
                              },
                              "id": {
                                "type": "string",
                                "example": "cfd20946-9518-43a7-94c4-0ba003249edb"
                              },
                              "last_name": {
                                "type": "string",
                                "example": "Admin"
                              }
                            }
                          },
                          "user_id": {
                            "type": "string",
                            "example": "cfd20946-9518-43a7-94c4-0ba003249edb"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Notes create",
        "description": "",
        "operationId": "notes-create",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "machine_note"
                ],
                "properties": {
                  "machine_note": {
                    "type": "object",
                    "required": [
                      "content"
                    ],
                    "properties": {
                      "content": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"data\":{\"content\":\"Test\",\"id\":\"a7643de6-1299-426b-b47c-322d23047b0e\",\"inserted_at\":\"2023-11-29T13:16:11\",\"user\":{\"first_name\":\"Visup\",\"id\":\"cfd20946-9518-43a7-94c4-0ba003249edb\",\"last_name\":\"Admin\"},\"user_id\":\"cfd20946-9518-43a7-94c4-0ba003249edb\"}}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string",
                          "example": "Test"
                        },
                        "id": {
                          "type": "string",
                          "example": "a7643de6-1299-426b-b47c-322d23047b0e"
                        },
                        "inserted_at": {
                          "type": "string",
                          "example": "2023-11-29T13:16:11"
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "first_name": {
                              "type": "string",
                              "example": "Visup"
                            },
                            "id": {
                              "type": "string",
                              "example": "cfd20946-9518-43a7-94c4-0ba003249edb"
                            },
                            "last_name": {
                              "type": "string",
                              "example": "Admin"
                            }
                          }
                        },
                        "user_id": {
                          "type": "string",
                          "example": "cfd20946-9518-43a7-94c4-0ba003249edb"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/{device_id}/notes/{node_id}": {
      "delete": {
        "summary": "Notes delete",
        "description": "",
        "operationId": "notes-delete",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "note_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"data\":[{\"content\":\"Compressor replaced\",\"id\":\"393f5c84-7e5d-48b9-9e46-4efcf4d61817\",\"inserted_at\":\"2023-08-08T08:51:34\",\"user\":{\"first_name\":\"Visup\",\"id\":\"cfd20946-9518-43a7-94c4-0ba003249edb\",\"last_name\":\"Admin\"},\"user_id\":\"cfd20946-9518-43a7-94c4-0ba003249edb\"}]}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "content": {
                            "type": "string",
                            "example": "Compressor replaced"
                          },
                          "id": {
                            "type": "string",
                            "example": "393f5c84-7e5d-48b9-9e46-4efcf4d61817"
                          },
                          "inserted_at": {
                            "type": "string",
                            "example": "2023-08-08T08:51:34"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "first_name": {
                                "type": "string",
                                "example": "Visup"
                              },
                              "id": {
                                "type": "string",
                                "example": "cfd20946-9518-43a7-94c4-0ba003249edb"
                              },
                              "last_name": {
                                "type": "string",
                                "example": "Admin"
                              }
                            }
                          },
                          "user_id": {
                            "type": "string",
                            "example": "cfd20946-9518-43a7-94c4-0ba003249edb"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "403",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"errors\": {\n    \"detail\": \"Forbidden\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "detail": {
                          "type": "string",
                          "example": "Forbidden"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes/machines/{machine_id}/init_recipes": {
      "get": {
        "summary": "Init recipes",
        "description": "This endpoint triggers Things5 to send mqtt messages to fetch device reipces",
        "operationId": "init-recipes",
        "parameters": [
          {
            "name": "machine_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes/machines/{machine_id}/cancel_init_recipes": {
      "get": {
        "summary": "Cancel init recipes",
        "description": "Sets the \"synching\" field to false",
        "operationId": "cancel-init-recipes",
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes/machines/{machine_id}/recipes": {
      "get": {
        "summary": "List recipes",
        "description": "In the response there is a \"synching\" field and a \"synced\" field. The \"synched\" field is true if the machine has never been synched with things5",
        "operationId": "list-recipes",
        "parameters": [
          {
            "name": "machine_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"description\": \"pollo con patate\",\n      \"id\": \"1\",\n      \"last_update\": \"2024-03-05T17:25:53Z\",\n      \"machine_id\": \"873932fc-09a6-4c41-8667-2b89762d37cb\",\n      \"metadata\": [],\n      \"name\": \"Pollo con patate al cuore\",\n      \"pending_update\": false,\n      \"phases\": [\n        {\n          \"dosages\": [\n            {\n              \"metadata\": [\n                {\n                  \"name\": \"custom_dosage\",\n                  \"type\": \"string\",\n                  \"value\": \"pepe\"\n                }\n              ],\n              \"name\": \"0\",\n              \"quantity\": \"1500\",\n              \"type\": \"integer\",\n              \"unit\": \"ml\"\n            }\n          ],\n          \"values\": [\n            {\n              \"name\": \"wrk\",\n              \"type\": \"string\",\n              \"value\": \"PAUSE\"\n            },\n            {\n              \"name\": \"s1\",\n              \"type\": \"integer\",\n              \"value\": \"43\"\n            }\n          ]\n        }\n      ],\n      \"unique_id\": \"4bbec0f1-8f85-4de8-8b4a-86c45d0334d7\",\n      \"user_id\": null\n    }\n  ],\n  \"pagination\": {\n    \"after\": null,\n    \"total_count\": 1\n  },\n  \"synched\": true,\n  \"synching\": false\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "example": "pollo con patate"
                          },
                          "id": {
                            "type": "string",
                            "example": "1"
                          },
                          "last_update": {
                            "type": "string",
                            "example": "2024-03-05T17:25:53Z"
                          },
                          "machine_id": {
                            "type": "string",
                            "example": "873932fc-09a6-4c41-8667-2b89762d37cb"
                          },
                          "metadata": {
                            "type": "array"
                          },
                          "name": {
                            "type": "string",
                            "example": "Pollo con patate al cuore"
                          },
                          "pending_update": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          },
                          "phases": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "dosages": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "custom_dosage"
                                            },
                                            "type": {
                                              "type": "string",
                                              "example": "string"
                                            },
                                            "value": {
                                              "type": "string",
                                              "example": "pepe"
                                            }
                                          }
                                        }
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "0"
                                      },
                                      "quantity": {
                                        "type": "string",
                                        "example": "1500"
                                      },
                                      "type": {
                                        "type": "string",
                                        "example": "integer"
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "ml"
                                      }
                                    }
                                  }
                                },
                                "values": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "wrk"
                                      },
                                      "type": {
                                        "type": "string",
                                        "example": "string"
                                      },
                                      "value": {
                                        "type": "string",
                                        "example": "PAUSE"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "unique_id": {
                            "type": "string",
                            "example": "4bbec0f1-8f85-4de8-8b4a-86c45d0334d7"
                          },
                          "user_id": {}
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "after": {},
                        "total_count": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        }
                      }
                    },
                    "synched": {
                      "type": "boolean",
                      "example": true,
                      "default": true
                    },
                    "synching": {
                      "type": "boolean",
                      "example": false,
                      "default": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create recipe",
        "description": "",
        "operationId": "create-recipe",
        "parameters": [
          {
            "name": "machine_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "recipe"
                ],
                "properties": {
                  "recipe": {
                    "type": "object",
                    "required": [
                      "machine_id",
                      "name",
                      "unique_id"
                    ],
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "last_update": {
                        "type": "string"
                      },
                      "machine_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "pending_update": {
                        "type": "boolean",
                        "description": "wheter the recipe is being synched. False when device has processed update request"
                      },
                      "unique_id": {
                        "type": "string",
                        "description": "Things5 unique id that reppresents a recipe in Things5"
                      },
                      "user_id": {
                        "type": "string"
                      },
                      "phases": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "values": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "string",
                                      "integer",
                                      "float",
                                      "bool"
                                    ]
                                  }
                                },
                                "required": [
                                  "name",
                                  "value",
                                  "type"
                                ],
                                "type": "object"
                              }
                            },
                            "dosages": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "string"
                                  },
                                  "unit": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "string",
                                      "integer",
                                      "float"
                                    ]
                                  },
                                  "metadata": {
                                    "type": "array",
                                    "items": {
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "string",
                                            "integer",
                                            "float",
                                            "bool"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "value",
                                        "type"
                                      ],
                                      "type": "object"
                                    }
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object"
                              }
                            }
                          },
                          "type": "object"
                        }
                      },
                      "metadata": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "string",
                                "integer",
                                "float",
                                "bool"
                              ]
                            }
                          },
                          "required": [
                            "name",
                            "value",
                            "type"
                          ],
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "recipe": {
                      "description": "A nice description",
                      "id": "1",
                      "last_update": "2024-03-05T17:25:53Z",
                      "machine_id": "873932fc-09a6-4c41-8667-2b89762d37cb",
                      "metadata": [],
                      "name": "Pollo con patate al cuore",
                      "pending_update": false,
                      "phases": [
                        {
                          "values": [
                            {
                              "name": "wrk",
                              "type": "string",
                              "value": "PAUSE"
                            },
                            {
                              "name": "s1",
                              "type": "integer",
                              "value": "43"
                            }
                          ],
                          "dosages": [
                            {
                              "name": "0",
                              "quantity": "1500",
                              "unit": null,
                              "type": "integer",
                              "metadata": [
                                {
                                  "name": "custom_dosage",
                                  "value": "pepe",
                                  "type": "string"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "unique_id": "4bbec0f1-8f85-4de8-8b4a-86c45d0334d7",
                      "user_id": null
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"description\": \"A nice description\",\n    \"id\": \"1\",\n    \"last_update\": \"2024-03-05T17:59:18Z\",\n    \"machine_id\": \"873932fc-09a6-4c41-8667-2b89762d37cb\",\n    \"metadata\": [],\n    \"name\": \"Pollo con patate al cuore\",\n    \"pending_update\": false,\n    \"phases\": [\n      {\n        \"dosages\": [\n          {\n            \"metadata\": [\n              {\n                \"name\": \"custom_dosage\",\n                \"type\": \"string\",\n                \"value\": \"pepe\"\n              }\n            ],\n            \"name\": \"0\",\n            \"quantity\": \"1500\",\n            \"type\": \"integer\",\n            \"unit\": \"\"\n          }\n        ],\n        \"values\": [\n          {\n            \"name\": \"wrk\",\n            \"type\": \"string\",\n            \"value\": \"PAUSE\"\n          },\n          {\n            \"name\": \"s1\",\n            \"type\": \"integer\",\n            \"value\": \"43\"\n          }\n        ]\n      }\n    ],\n    \"unique_id\": \"4bbec0f1-8f85-4de8-8b4a-86c45d0334d7\",\n    \"user_id\": null\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "example": "A nice description"
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "last_update": {
                          "type": "string",
                          "example": "2024-03-05T17:59:18Z"
                        },
                        "machine_id": {
                          "type": "string",
                          "example": "873932fc-09a6-4c41-8667-2b89762d37cb"
                        },
                        "metadata": {
                          "type": "array"
                        },
                        "name": {
                          "type": "string",
                          "example": "Pollo con patate al cuore"
                        },
                        "pending_update": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "phases": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "dosages": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "metadata": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "custom_dosage"
                                          },
                                          "type": {
                                            "type": "string",
                                            "example": "string"
                                          },
                                          "value": {
                                            "type": "string",
                                            "example": "pepe"
                                          }
                                        }
                                      }
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "0"
                                    },
                                    "quantity": {
                                      "type": "string",
                                      "example": "1500"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "example": ""
                                    }
                                  }
                                }
                              },
                              "values": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "example": "wrk"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "value": {
                                      "type": "string",
                                      "example": "PAUSE"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "unique_id": {
                          "type": "string",
                          "example": "4bbec0f1-8f85-4de8-8b4a-86c45d0334d7"
                        },
                        "user_id": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes/machines/{machine_id}/recipes/{recipe_id}": {
      "delete": {
        "summary": "Delete recipe",
        "description": "",
        "operationId": "delete-recipe",
        "parameters": [
          {
            "name": "machine_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "recipe_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes/machines/{machine_id}/recipes/{unique_recipe_id}": {
      "patch": {
        "summary": "Update recipe",
        "description": "",
        "operationId": "update-recipe",
        "parameters": [
          {
            "name": "machine_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "unique_recipe_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "recipe"
                ],
                "properties": {
                  "recipe": {
                    "type": "object",
                    "required": [
                      "machine_id",
                      "name",
                      "unique_id"
                    ],
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "last_update": {
                        "type": "string"
                      },
                      "machine_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "pending_update": {
                        "type": "boolean",
                        "description": "wheter the recipe is being synched. False when device has processed update request"
                      },
                      "unique_id": {
                        "type": "string",
                        "description": "Things5 unique id that reppresents a recipe in Things5"
                      },
                      "user_id": {
                        "type": "string"
                      },
                      "phases": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "values": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "string",
                                      "integer",
                                      "float",
                                      "bool"
                                    ]
                                  }
                                },
                                "required": [
                                  "name",
                                  "value",
                                  "type"
                                ],
                                "type": "object"
                              }
                            },
                            "dosages": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "string"
                                  },
                                  "unit": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "string",
                                      "integer",
                                      "float"
                                    ]
                                  },
                                  "metadata": {
                                    "type": "array",
                                    "items": {
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "string",
                                            "integer",
                                            "float",
                                            "bool"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "value",
                                        "type"
                                      ],
                                      "type": "object"
                                    }
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object"
                              }
                            }
                          },
                          "type": "object"
                        }
                      },
                      "metadata": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "string",
                                "integer",
                                "float",
                                "bool"
                              ]
                            }
                          },
                          "required": [
                            "name",
                            "value",
                            "type"
                          ],
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "recipe": {
                      "description": "A nice description",
                      "id": "1",
                      "last_update": "2024-03-05T17:25:53Z",
                      "machine_id": "873932fc-09a6-4c41-8667-2b89762d37cb",
                      "metadata": [],
                      "name": "Pollo con patate al cuore",
                      "pending_update": false,
                      "phases": [
                        {
                          "values": [
                            {
                              "name": "wrk",
                              "type": "string",
                              "value": "PAUSE"
                            },
                            {
                              "name": "s1",
                              "type": "integer",
                              "value": "43"
                            }
                          ],
                          "dosages": [
                            {
                              "name": "0",
                              "quantity": "1500",
                              "unit": null,
                              "type": "integer",
                              "metadata": [
                                {
                                  "name": "custom_dosage",
                                  "value": "pepe",
                                  "type": "string"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "unique_id": "4bbec0f1-8f85-4de8-8b4a-86c45d0334d7",
                      "user_id": null
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"description\": \"A nice description\",\n    \"id\": \"1\",\n    \"last_update\": \"2024-03-05T17:59:18Z\",\n    \"machine_id\": \"873932fc-09a6-4c41-8667-2b89762d37cb\",\n    \"metadata\": [],\n    \"name\": \"Pollo con patate al cuore\",\n    \"pending_update\": false,\n    \"phases\": [\n      {\n        \"dosages\": [\n          {\n            \"metadata\": [\n              {\n                \"name\": \"custom_dosage\",\n                \"type\": \"string\",\n                \"value\": \"pepe\"\n              }\n            ],\n            \"name\": \"0\",\n            \"quantity\": \"1500\",\n            \"type\": \"integer\",\n            \"unit\": \"\"\n          }\n        ],\n        \"values\": [\n          {\n            \"name\": \"wrk\",\n            \"type\": \"string\",\n            \"value\": \"PAUSE\"\n          },\n          {\n            \"name\": \"s1\",\n            \"type\": \"integer\",\n            \"value\": \"43\"\n          }\n        ]\n      }\n    ],\n    \"unique_id\": \"4bbec0f1-8f85-4de8-8b4a-86c45d0334d7\",\n    \"user_id\": null\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "example": "A nice description"
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "last_update": {
                          "type": "string",
                          "example": "2024-03-05T17:59:18Z"
                        },
                        "machine_id": {
                          "type": "string",
                          "example": "873932fc-09a6-4c41-8667-2b89762d37cb"
                        },
                        "metadata": {
                          "type": "array"
                        },
                        "name": {
                          "type": "string",
                          "example": "Pollo con patate al cuore"
                        },
                        "pending_update": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "phases": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "dosages": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "metadata": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "custom_dosage"
                                          },
                                          "type": {
                                            "type": "string",
                                            "example": "string"
                                          },
                                          "value": {
                                            "type": "string",
                                            "example": "pepe"
                                          }
                                        }
                                      }
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "0"
                                    },
                                    "quantity": {
                                      "type": "string",
                                      "example": "1500"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "example": ""
                                    }
                                  }
                                }
                              },
                              "values": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "example": "wrk"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "value": {
                                      "type": "string",
                                      "example": "PAUSE"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "unique_id": {
                          "type": "string",
                          "example": "4bbec0f1-8f85-4de8-8b4a-86c45d0334d7"
                        },
                        "user_id": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes/machines/{machine_id}/recipes/{recipe_unique_id}": {
      "get": {
        "summary": "Recipe detail",
        "description": "",
        "operationId": "recipe-detail",
        "parameters": [
          {
            "name": "machine_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "recipe_unique_id",
            "in": "path",
            "description": "this is the unique_id field, NOT the id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"description\": \"\",\n    \"id\": \"1\",\n    \"last_update\": \"2024-03-05T17:25:53Z\",\n    \"machine_id\": \"873932fc-09a6-4c41-8667-2b89762d37cb\",\n    \"metadata\": [],\n    \"name\": \"Pollo con patate al cuore\",\n    \"pending_update\": false,\n    \"phases\": [\n      {\n        \"dosages\": [\n          {\n            \"metadata\": [\n              {\n                \"name\": \"custom_dosage\",\n                \"type\": \"string\",\n                \"value\": \"pepe\"\n              }\n            ],\n            \"name\": \"0\",\n            \"quantity\": \"1500\",\n            \"type\": \"integer\",\n            \"unit\": \"ml\"\n          }\n        ],\n        \"values\": [\n          {\n            \"name\": \"wrk\",\n            \"type\": \"string\",\n            \"value\": \"PAUSE\"\n          },\n          {\n            \"name\": \"s1\",\n            \"type\": \"integer\",\n            \"value\": \"43\"\n          }\n        ]\n      }\n    ],\n    \"unique_id\": \"4bbec0f1-8f85-4de8-8b4a-86c45d0334d7\",\n    \"user_id\": null\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "example": ""
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "last_update": {
                          "type": "string",
                          "example": "2024-03-05T17:25:53Z"
                        },
                        "machine_id": {
                          "type": "string",
                          "example": "873932fc-09a6-4c41-8667-2b89762d37cb"
                        },
                        "metadata": {
                          "type": "array"
                        },
                        "name": {
                          "type": "string",
                          "example": "Pollo con patate al cuore"
                        },
                        "pending_update": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "phases": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "dosages": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "metadata": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "custom_dosage"
                                          },
                                          "type": {
                                            "type": "string",
                                            "example": "string"
                                          },
                                          "value": {
                                            "type": "string",
                                            "example": "pepe"
                                          }
                                        }
                                      }
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "0"
                                    },
                                    "quantity": {
                                      "type": "string",
                                      "example": "1500"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "example": "ml"
                                    }
                                  }
                                }
                              },
                              "values": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "example": "wrk"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "value": {
                                      "type": "string",
                                      "example": "PAUSE"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "unique_id": {
                          "type": "string",
                          "example": "4bbec0f1-8f85-4de8-8b4a-86c45d0334d7"
                        },
                        "user_id": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes/machines/{machine_id}/cancel_update_request": {
      "get": {
        "summary": "Cancel update recipes",
        "description": "This can be useful when the recipes have been updated on Things5 triggering an update request to the device but the device has become unresponsive. In this case the \"synching\" field will remain true indefinitely. By canceling the update recipes request the \"synching\" and \"synched\" field will be set to false and all the recipes on Things5 will be removed.",
        "operationId": "cancel-update-recipes",
        "parameters": [
          {
            "name": "machine_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/machines/{machine_id}": {
      "post": {
        "summary": "Change machine model",
        "description": "The destination machine model must have a firmware marked as main",
        "operationId": "change-machine-model",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "machine_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "machine_model_id"
                ],
                "properties": {
                  "machine_model_id": {
                    "type": "string",
                    "description": "the machine model id the machine will be changed to"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/roles": {
      "get": {
        "summary": "Roles list",
        "description": "",
        "operationId": "roles-list",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"id\": \"fdccee26-d066-459a-9a6c-d3ea25074c45\",\n      \"name\": \"Service\",\n      \"permissions\": [\n        { \"name\": \"machines:view\" },\n        { \"name\": \"machines:create\" },\n        { \"name\": \"machines:delete\" }\n      ],\n      \"system\": false,\n      \"users_create_child_roles\": [\n        {\n          \"id\": \"05cf524b-4311-4208-a740-042673d997a4\",\n          \"name\": \"standard user 6\",\n          \"permissions\": null,\n          \"system\": false,\n          \"users_create_child_roles\": null\n        },\n      ]\n    }\n  ]\n}\n"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Roles create",
        "description": "",
        "operationId": "roles-create",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "permissions": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "enum": [
                                "machines:view",
                                "machines:manage",
                                "machines:create",
                                "machines:update_machines_group",
                                "machines:delete",
                                "machines:ingest_data",
                                "machines:generate_certs",
                                "machines:firmmware_update",
                                "machines:firmware:manage",
                                "machines:config:manage",
                                "machines:config:configuration_level_1_read",
                                "machines:config:configuration_level_1_write",
                                "machines:config:configuration_level_2_read",
                                "machines:config:configuration_level_2_write",
                                "machines:config:configuration_level_3_read",
                                "machines:config:configuration_level_3_write",
                                "machines:config:configuration_level_4_read",
                                "machines:config:configuration_level_4_write",
                                "machines:config:configuration_level_5_read",
                                "machines:config:configuration_level_5_write",
                                "machines:commands:execute",
                                "machines_groups:manage",
                                "machine_models:manage",
                                "roles:manage",
                                "widgets:manage",
                                "users:view",
                                "users:manage",
                                "recipes:manage",
                                "sharing:manage",
                                "companies:view",
                                "companies:manage",
                                "service_ai:playground:view",
                                "service_ai:knowledge:view",
                                "service_ai:conversations:view"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "users_create_child_roles": {
                        "type": "array",
                        "description": "When creating a new user-machines-groups association these are the only roles the user is allowed to assign to the new user.",
                        "items": {
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ],
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"id\": \"fdccee26-d066-459a-9a6c-d3ea25074c45\",\n      \"name\": \"Service\",\n      \"permissions\": [\n        { \"name\": \"machines:view\" },\n        { \"name\": \"machines:create\" },\n        { \"name\": \"machines:delete\" }\n      ],\n      \"system\": false,\n      \"users_create_child_roles\": [\n        {\n          \"id\": \"05cf524b-4311-4208-a740-042673d997a4\",\n          \"name\": \"standard user 6\",\n          \"permissions\": null,\n          \"system\": false,\n          \"users_create_child_roles\": null\n        },\n      ]\n    }\n  ]\n}\n"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/users": {
      "post": {
        "summary": "User create",
        "description": "",
        "operationId": "user-create",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "user"
                ],
                "properties": {
                  "user": {
                    "type": "object",
                    "required": [
                      "first_name",
                      "last_name",
                      "email"
                    ],
                    "properties": {
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "role_id": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string",
                        "description": "keycloak client_id used to redirect user after password reset",
                        "default": "frontend"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"client_id\": null,\n    \"email\": \"paolo@mail.it\",\n    \"email_notifications_enabled\": false,\n    \"enabled_notifications\": [\"user:created\", \"machine:created\"],\n    \"first_name\": \"paolo\",\n    \"id\": \"31e19fd9-7909-405e-a6f1-f45f4d077dc2\",\n    \"language\": \"it\",\n    \"last_name\": \"rossi\",\n    \"machines_count\": 14,\n    \"mobile_notifications_enabled\": false,\n    \"role\": {\n      \"id\": \"b87f6422-7fd5-4695-a8d6-442afad98a52\",\n      \"name\": \"admin\",\n      \"permissions\": null,\n      \"system\": true,\n      \"users_create_child_roles\": null\n    },\n    \"telegram_notifications_enabled\": true,\n    \"timestamps\": {\n      \"first_login_at\": \"2024-06-03T14:05:26Z\",\n      \"has_credentials\": true,\n      \"inserted_at\": \"2024-06-03T13:58:38.255Z\",\n      \"invite_token_lifespan\": 1209600,\n      \"last_login_at\": \"2024-06-18T15:10:44Z\",\n      \"last_reset_password\": null,\n      \"last_send_reset_password\": \"2024-06-03T14:10:06.559964Z\"\n    },\n    \"web_notifications_enabled\": false\n  }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "client_id": {},
                        "email": {
                          "type": "string",
                          "example": "paolo@mail.it"
                        },
                        "email_notifications_enabled": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "enabled_notifications": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "user:created"
                          }
                        },
                        "first_name": {
                          "type": "string",
                          "example": "paolo"
                        },
                        "id": {
                          "type": "string",
                          "example": "31e19fd9-7909-405e-a6f1-f45f4d077dc2"
                        },
                        "language": {
                          "type": "string",
                          "example": "it"
                        },
                        "last_name": {
                          "type": "string",
                          "example": "rossi"
                        },
                        "machines_count": {
                          "type": "integer",
                          "example": 14,
                          "default": 0
                        },
                        "mobile_notifications_enabled": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "role": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "b87f6422-7fd5-4695-a8d6-442afad98a52"
                            },
                            "name": {
                              "type": "string",
                              "example": "admin"
                            },
                            "permissions": {},
                            "system": {
                              "type": "boolean",
                              "example": true,
                              "default": true
                            },
                            "users_create_child_roles": {}
                          }
                        },
                        "telegram_notifications_enabled": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "timestamps": {
                          "type": "object",
                          "properties": {
                            "first_login_at": {
                              "type": "string",
                              "example": "2024-06-03T14:05:26Z"
                            },
                            "has_credentials": {
                              "type": "boolean",
                              "example": true,
                              "default": true
                            },
                            "inserted_at": {
                              "type": "string",
                              "example": "2024-06-03T13:58:38.255Z"
                            },
                            "invite_token_lifespan": {
                              "type": "integer",
                              "example": 1209600,
                              "default": 0
                            },
                            "last_login_at": {
                              "type": "string",
                              "example": "2024-06-18T15:10:44Z"
                            },
                            "last_reset_password": {},
                            "last_send_reset_password": {
                              "type": "string",
                              "example": "2024-06-03T14:10:06.559964Z"
                            }
                          }
                        },
                        "web_notifications_enabled": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Users list",
        "description": "",
        "operationId": "users-list",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "search",
            "in": "query",
            "description": "filter users by first name, last name or email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "machines_groups_ids[]",
            "in": "query",
            "description": "filter users that have an association with at least one of the provided machines groups",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination parameter. If there are a lot of items only some will be present in data field. To get the remaining items repeat the API call using the after parameter present in the body of the previous request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"client_id\": null,\n      \"email\": \"andrea@visup.it\",\n      \"email_notifications_enabled\": false,\n      \"enabled_notifications\": [\"user:created\", \"machine:created\"],\n      \"first_name\": \"Andrea\",\n      \"id\": \"31e19fd9-7909-405e-a6f1-f45f4d077dc2\",\n      \"language\": \"it\",\n      \"last_name\": \"Grossetti\",\n      \"machines_count\": 14,\n      \"mobile_notifications_enabled\": false,\n      \"role\": {\n        \"id\": \"b87f6422-7fd5-4695-a8d6-442afad98a52\",\n        \"name\": \"admin\",\n        \"permissions\": null,\n        \"system\": true,\n        \"users_create_child_roles\": null\n      },\n      \"telegram_notifications_enabled\": true,\n      \"timestamps\": {\n        \"first_login_at\": \"2024-06-03T14:05:26Z\",\n        \"has_credentials\": true,\n        \"inserted_at\": \"2024-06-03T13:58:38.255Z\",\n        \"invite_token_lifespan\": 1209600,\n        \"last_login_at\": \"2024-06-18T15:10:44Z\",\n        \"last_reset_password\": null,\n        \"last_send_reset_password\": \"2024-06-03T14:10:06.559964Z\"\n      },\n      \"web_notifications_enabled\": false\n    }\n  ],\n  \"pagination\": {\n    \"after\": \"g3QAAAADZAAKZmlyc3RfbmFtZW0AAAAGU2ltb25lZAACaWRtAAAAJDg3NTIzYjQwLTAxODctNGJiZC04OWU4LWIzNTQ4MTVmZjk3NGQACWxhc3RfbmFtZW0AAAAGVmFsZW50\",\n    \"total_count\": 17\n  }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "client_id": {},
                          "email": {
                            "type": "string",
                            "example": "andrea@visup.it"
                          },
                          "email_notifications_enabled": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          },
                          "enabled_notifications": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "user:created"
                            }
                          },
                          "first_name": {
                            "type": "string",
                            "example": "Andrea"
                          },
                          "id": {
                            "type": "string",
                            "example": "31e19fd9-7909-405e-a6f1-f45f4d077dc2"
                          },
                          "language": {
                            "type": "string",
                            "example": "it"
                          },
                          "last_name": {
                            "type": "string",
                            "example": "Grossetti"
                          },
                          "machines_count": {
                            "type": "integer",
                            "example": 14,
                            "default": 0
                          },
                          "mobile_notifications_enabled": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          },
                          "role": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "b87f6422-7fd5-4695-a8d6-442afad98a52"
                              },
                              "name": {
                                "type": "string",
                                "example": "admin"
                              },
                              "permissions": {},
                              "system": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "users_create_child_roles": {}
                            }
                          },
                          "telegram_notifications_enabled": {
                            "type": "boolean",
                            "example": true,
                            "default": true
                          },
                          "timestamps": {
                            "type": "object",
                            "properties": {
                              "first_login_at": {
                                "type": "string",
                                "example": "2024-06-03T14:05:26Z"
                              },
                              "has_credentials": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "inserted_at": {
                                "type": "string",
                                "example": "2024-06-03T13:58:38.255Z"
                              },
                              "invite_token_lifespan": {
                                "type": "integer",
                                "example": 1209600,
                                "default": 0
                              },
                              "last_login_at": {
                                "type": "string",
                                "example": "2024-06-18T15:10:44Z"
                              },
                              "last_reset_password": {},
                              "last_send_reset_password": {
                                "type": "string",
                                "example": "2024-06-03T14:10:06.559964Z"
                              }
                            }
                          },
                          "web_notifications_enabled": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "after": {
                          "type": "string",
                          "example": "g3QAAAADZAAKZmlyc3RfbmFtZW0AAAAGU2ltb25lZAACaWRtAAAAJDg3NTIzYjQwLTAxODctNGJiZC04OWU4LWIzNTQ4MTVmZjk3NGQACWxhc3RfbmFtZW0AAAAGVmFsZW50"
                        },
                        "total_count": {
                          "type": "integer",
                          "example": 17,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/machines_group_categories": {
      "get": {
        "summary": "List device group categories",
        "description": "",
        "operationId": "list-device-group-categories",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"id\": \"19127fd9-46dc-48b9-bca6-935f13e71e7e\",\n      \"name\": \"Visup\",\n      \"parent_id\": null\n    },\n    {\n      \"id\": \"8979a8b8-ab62-4275-96d6-b2b4d5f4e436\",\n      \"name\": \"Dealer\",\n      \"parent_id\": \"19127fd9-46dc-48b9-bca6-935f13e71e7e\"\n    },\n    {\n      \"id\": \"dfd4c3f6-dff6-456b-a007-6ac47f5c497c\",\n      \"name\": \"Customer\",\n      \"parent_id\": \"8979a8b8-ab62-4275-96d6-b2b4d5f4e436\"\n    }\n  ]\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "19127fd9-46dc-48b9-bca6-935f13e71e7e"
                          },
                          "name": {
                            "type": "string",
                            "example": "Visup"
                          },
                          "parent_id": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/machines_group_categories/organizations/{organization_id}/machine_group_categories": {
      "post": {
        "summary": "Create machine group category",
        "description": "",
        "operationId": "create-device-group-categories",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "machine_group_category"
                ],
                "properties": {
                  "machine_group_category": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "parent_id": {
                        "type": "string",
                        "description": "optional. Provide the parent category id if the category is a subcategory."
                      }
                    }
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "machines_group_category": {
                      "name": "test",
                      "parent_id": "dfd4c3f6-dff6-456b-a007-6ac47f5c497c"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"data\":{\"id\":\"63d80160-46d6-485e-9db4-ae6cdba77742\",\"name\":\"test\",\"parent_id\":\"dfd4c3f6-dff6-456b-a007-6ac47f5c497c\"}}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "63d80160-46d6-485e-9db4-ae6cdba77742"
                        },
                        "name": {
                          "type": "string",
                          "example": "test"
                        },
                        "parent_id": {
                          "type": "string",
                          "example": "dfd4c3f6-dff6-456b-a007-6ac47f5c497c"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/machines_group_categories/{machines_group_category}": {
      "patch": {
        "summary": "Edit device group category",
        "description": "",
        "operationId": "edit-device-group-category",
        "parameters": [
          {
            "name": "machines_group_category",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "machines_group_category"
                ],
                "properties": {
                  "machines_group_category": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "parent_id": {
                        "type": "string",
                        "description": "optional. Provide the parent category id if the category is a subcategory."
                      }
                    }
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "machines_group_category": {
                      "name": "test"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"data\":{\"id\":\"63d80160-46d6-485e-9db4-ae6cdba77742\",\"name\":\"test\",\"parent_id\":\"dfd4c3f6-dff6-456b-a007-6ac47f5c497c\"}}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "63d80160-46d6-485e-9db4-ae6cdba77742"
                        },
                        "name": {
                          "type": "string",
                          "example": "test"
                        },
                        "parent_id": {
                          "type": "string",
                          "example": "dfd4c3f6-dff6-456b-a007-6ac47f5c497c"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete device group category",
        "description": "",
        "operationId": "delete-device-group-category",
        "parameters": [
          {
            "name": "machines_group_category",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\"data\":{\"id\":\"63d80160-46d6-485e-9db4-ae6cdba77742\",\"name\":\"test\",\"parent_id\":\"dfd4c3f6-dff6-456b-a007-6ac47f5c497c\"}}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "63d80160-46d6-485e-9db4-ae6cdba77742"
                        },
                        "name": {
                          "type": "string",
                          "example": "test"
                        },
                        "parent_id": {
                          "type": "string",
                          "example": "dfd4c3f6-dff6-456b-a007-6ac47f5c497c"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {},
              "examples": {
                "Request Example": {
                  "value": {
                    "machines_group_category": {
                      "name": "test"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/machines_groups/{machine_group_id}": {
      "delete": {
        "summary": "Delete",
        "description": "",
        "operationId": "devices-groups-list-copy",
        "parameters": [
          {
            "name": "machine_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"category\": {\n        \"id\": \"03dba360-fd18-4d3e-a5c8-0f4aedc3cd44\",\n        \"name\": \"Cliente finale\",\n        \"parent_id\": \"5fe9af79-2b53-4223-b5c5-9a83cb98a496\"\n      },\n      \"category_id\": \"54d0a956-aea6-493b-9f6a-1318dc61178d\",\n      \"id\": \"9ee06c44-098e-4a68-a882-2d5c7757eb42\",\n      \"name\": \"Foo\",\n      \"organization_id\": \"2ed086da-8350-48d8-96ac-97d47da97f2d\",\n      \"parent_id\": \"cf0cd192-e98c-4ad6-b660-d7aed97fabea\"\n    }\n  ]\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "category": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "03dba360-fd18-4d3e-a5c8-0f4aedc3cd44"
                              },
                              "name": {
                                "type": "string",
                                "example": "Cliente finale"
                              },
                              "parent_id": {
                                "type": "string",
                                "example": "5fe9af79-2b53-4223-b5c5-9a83cb98a496"
                              }
                            }
                          },
                          "category_id": {
                            "type": "string",
                            "example": "54d0a956-aea6-493b-9f6a-1318dc61178d"
                          },
                          "id": {
                            "type": "string",
                            "example": "9ee06c44-098e-4a68-a882-2d5c7757eb42"
                          },
                          "name": {
                            "type": "string",
                            "example": "Foo"
                          },
                          "organization_id": {
                            "type": "string",
                            "example": "2ed086da-8350-48d8-96ac-97d47da97f2d"
                          },
                          "parent_id": {
                            "type": "string",
                            "example": "cf0cd192-e98c-4ad6-b660-d7aed97fabea"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "summary": "Show",
        "description": "Get a specifi device group",
        "operationId": "show-device-group",
        "parameters": [
          {
            "name": "machine_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"category\": {\n      \"id\": \"8979a8b8-ab62-4275-96d6-b2b4d5f4e436\",\n      \"name\": \"Dealer\",\n      \"parent_id\": \"19127fd9-46dc-48b9-bca6-935f13e71e7e\"\n    },\n    \"category_id\": \"8979a8b8-ab62-4275-96d6-b2b4d5f4e436\",\n    \"id\": \"0462a325-f2be-48b8-9b2a-7a681b5a883c\",\n    \"machines\": [],\n    \"name\": \"250003790 | BAKERY INTERNATIONAL S.A. DE C.V\",\n    \"organization_id\": \"82a0e3fe-d553-42ba-a5dc-48ed221c5c8f\",\n    \"parent_id\": \"deb7100a-3060-4c55-932e-6e51cc6daf8c\",\n    \"shared\": false,\n    \"shared_organizations\": null\n  }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "category": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "8979a8b8-ab62-4275-96d6-b2b4d5f4e436"
                            },
                            "name": {
                              "type": "string",
                              "example": "Dealer"
                            },
                            "parent_id": {
                              "type": "string",
                              "example": "19127fd9-46dc-48b9-bca6-935f13e71e7e"
                            }
                          }
                        },
                        "category_id": {
                          "type": "string",
                          "example": "8979a8b8-ab62-4275-96d6-b2b4d5f4e436"
                        },
                        "id": {
                          "type": "string",
                          "example": "0462a325-f2be-48b8-9b2a-7a681b5a883c"
                        },
                        "machines": {
                          "type": "array"
                        },
                        "name": {
                          "type": "string",
                          "example": "250003790 | BAKERY INTERNATIONAL S.A. DE C.V"
                        },
                        "organization_id": {
                          "type": "string",
                          "example": "82a0e3fe-d553-42ba-a5dc-48ed221c5c8f"
                        },
                        "parent_id": {
                          "type": "string",
                          "example": "deb7100a-3060-4c55-932e-6e51cc6daf8c"
                        },
                        "shared": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "shared_organizations": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update",
        "description": "Get a specifi device group",
        "operationId": "update-device-group",
        "parameters": [
          {
            "name": "machine_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "machines_group": {
                    "type": "object",
                    "required": [
                      "id",
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "machines_group": {
                      "id": "d82109d6-df2c-42c9-9d5b-4a3f4c220e09",
                      "name": "new name"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"category\": null,\n    \"category_id\": \"19127fd9-46dc-48b9-bca6-935f13e71e7e\",\n    \"id\": \"d82109d6-df2c-42c9-9d5b-4a3f4c220e09\",\n    \"machines\": null,\n    \"name\": \"new name\",\n    \"organization_id\": \"82a0e3fe-d553-42ba-a5dc-48ed221c5c8f\",\n    \"parent_id\": null\n  }\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "category": {},
                        "category_id": {
                          "type": "string",
                          "example": "19127fd9-46dc-48b9-bca6-935f13e71e7e"
                        },
                        "id": {
                          "type": "string",
                          "example": "d82109d6-df2c-42c9-9d5b-4a3f4c220e09"
                        },
                        "machines": {},
                        "name": {
                          "type": "string",
                          "example": "new name"
                        },
                        "organization_id": {
                          "type": "string",
                          "example": "82a0e3fe-d553-42ba-a5dc-48ed221c5c8f"
                        },
                        "parent_id": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/machines_groups/{machines_group_id}/users": {
      "post": {
        "summary": "Create user-device group association",
        "description": "Creates a new user device group association. If the user is not registered on things5 an invitation email will be sent.",
        "operationId": "create-device-group-user",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "machines_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "user_email",
                  "role_id"
                ],
                "properties": {
                  "user_email": {
                    "type": "string"
                  },
                  "role_id": {
                    "type": "string"
                  },
                  "client_id": {
                    "type": "string",
                    "description": "keycloak client_id used to redirect user after password reset",
                    "default": "frontend"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "user_email": "andrea+2@visup.it",
                    "role_id": "b87f6422-7fd5-4695-a8d6-442afad98a52"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/machines_groups/{machines_group_id}/users/{user_id}": {
      "delete": {
        "summary": "Remove user-device association",
        "description": "Removes a user from device group. The user will not be deleted in things5",
        "operationId": "remove-device-group-user",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "machines_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "user_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}": {
      "get": {
        "summary": "Detail Organization",
        "description": "",
        "operationId": "organization-detail",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"custom_attributes\": [\n      {\n        \"key\": \"owner_company\",\n        \"label\": \"USER.ADDITIONAL_INFO.OWNER_COMPANY_LABEL\",\n        \"metadata\": {\n          \"position\": 0,\n          \"values\": null,\n          \"width\": 50\n        },\n        \"placeholder\": \"USER.ADDITIONAL_INFO.OWNER_COMPANY_PLACEHOLDER\",\n        \"required\": true,\n        \"type\": \"string\"\n      },\n      {\n        \"key\": \"installation_company\",\n        \"label\": \"USER.ADDITIONAL_INFO.INSTALLATION_COMPANY_LABEL\",\n        \"metadata\": {\n          \"position\": 1,\n          \"values\": null,\n          \"width\": 50\n        },\n        \"placeholder\": \"USER.ADDITIONAL_INFO.INSTALLATION_COMPANY_PLACEHOLDER\",\n        \"required\": true,\n        \"type\": \"string\"\n      },\n      {\n        \"key\": \"installation_contact\",\n        \"label\": \"USER.ADDITIONAL_INFO.INSTALLATION_CONTACT_LABEL\",\n        \"metadata\": {\n          \"position\": 2,\n          \"values\": null,\n          \"width\": 50\n        },\n        \"placeholder\": \"USER.ADDITIONAL_INFO.INSTALLATION_CONTACT_PLACEHOLDER\",\n        \"required\": false,\n        \"type\": \"number\"\n      },\n      {\n        \"key\": \"company\",\n        \"label\": \"RAGIONE SOCIALE\",\n        \"metadata\": {\n          \"position\": 3,\n          \"values\": null,\n          \"width\": 50\n        },\n        \"placeholder\": \"RAGIONE SOCIALE\",\n        \"required\": true,\n        \"type\": \"string\"\n      },\n      {\n        \"key\": \"vat\",\n        \"label\": \"P.IVA\",\n        \"metadata\": {\n          \"position\": 4,\n          \"values\": null,\n          \"width\": 50\n        },\n        \"placeholder\": \"P.IVA\",\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      {\n        \"key\": \"street\",\n        \"label\": \"INDIRIZZO\",\n        \"metadata\": {\n          \"position\": 5,\n          \"values\": null,\n          \"width\": 50\n        },\n        \"placeholder\": \"INDIRIZZO\",\n        \"required\": false,\n        \"type\": \"string\"\n      },\n      {\n        \"key\": \"activity\",\n        \"label\": \"Tipo utente\",\n        \"metadata\": {\n          \"position\": 6,\n          \"values\": [\n            \"UTENTE FINALE\",\n            \"RIVENDITORE\",\n            \"CENTRO ASSISTENZA\"\n          ],\n          \"width\": 50\n        },\n        \"placeholder\": null,\n        \"required\": false,\n        \"type\": \"enum\"\n      }\n    ],\n    \"custom_permissions\": [],\n    \"id\": \"ff520633-c7cc-417f-b81b-d1c3a54d7e86\",\n    \"name\": \"my organization\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "custom_attributes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string",
                                "example": "owner_company"
                              },
                              "label": {
                                "type": "string",
                                "example": "USER.ADDITIONAL_INFO.OWNER_COMPANY_LABEL"
                              },
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "position": {
                                    "type": "integer",
                                    "example": 0,
                                    "default": 0
                                  },
                                  "values": {},
                                  "width": {
                                    "type": "integer",
                                    "example": 50,
                                    "default": 0
                                  }
                                }
                              },
                              "placeholder": {
                                "type": "string",
                                "example": "USER.ADDITIONAL_INFO.OWNER_COMPANY_PLACEHOLDER"
                              },
                              "required": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "type": {
                                "type": "string",
                                "example": "string"
                              }
                            }
                          }
                        },
                        "custom_permissions": {
                          "type": "array"
                        },
                        "id": {
                          "type": "string",
                          "example": "ff520633-c7cc-417f-b81b-d1c3a54d7e86"
                        },
                        "name": {
                          "type": "string",
                          "example": "my organization"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update organization",
        "description": "",
        "operationId": "organization-update",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organization": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"custom_attributes\": [\n      {\n        \"key\": \"phone_number\",\n        \"label\": \"USER.ADDITIONAL_INFO.PHONE_NUMBER_LABEL\",\n        \"metadata\": {\n          \"position\": 2,\n          \"values\": null,\n          \"width\": 60\n        },\n        \"placeholder\": \"USER.ADDITIONAL_INFO.PHONE_NUMBER_PLACEHOLDER\",\n        \"required\": false,\n        \"type\": null\n      }\n    ],\n    \"id\": \"82a0e3fe-d553-42ba-a5dc-48ed221c5c8f\",\n    \"name\": \"visup staging\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "custom_attributes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string",
                                "example": "phone_number"
                              },
                              "label": {
                                "type": "string",
                                "example": "USER.ADDITIONAL_INFO.PHONE_NUMBER_LABEL"
                              },
                              "metadata": {
                                "type": "object",
                                "properties": {
                                  "position": {
                                    "type": "integer",
                                    "example": 2,
                                    "default": 0
                                  },
                                  "values": {},
                                  "width": {
                                    "type": "integer",
                                    "example": 60,
                                    "default": 0
                                  }
                                }
                              },
                              "placeholder": {
                                "type": "string",
                                "example": "USER.ADDITIONAL_INFO.PHONE_NUMBER_PLACEHOLDER"
                              },
                              "required": {
                                "type": "boolean",
                                "example": false,
                                "default": true
                              },
                              "type": {}
                            }
                          }
                        },
                        "id": {
                          "type": "string",
                          "example": "82a0e3fe-d553-42ba-a5dc-48ed221c5c8f"
                        },
                        "name": {
                          "type": "string",
                          "example": "visup staging"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/favicon_logo": {
      "put": {
        "summary": "Logo and favicon update",
        "description": "",
        "operationId": "logo-and-favicon-update",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "client_id"
                ],
                "properties": {
                  "client_id": {
                    "type": "string",
                    "description": "For most use cases and where custom mobile apps are not present, should be \"frontend\""
                  },
                  "file_logo": {
                    "type": "string",
                    "format": "binary"
                  },
                  "file_favicon": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"custom_attributes\": null,\n    \"id\": \"82a0e3fe-d553-42ba-a5dc-48ed221c5c8f\",\n    \"name\": \"visup staging\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "custom_attributes": {},
                        "id": {
                          "type": "string",
                          "example": "82a0e3fe-d553-42ba-a5dc-48ed221c5c8f"
                        },
                        "name": {
                          "type": "string",
                          "example": "visup staging"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/roles/{role_id}": {
      "patch": {
        "summary": "Edit Role",
        "description": "",
        "operationId": "edit-role",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "role"
                ],
                "properties": {
                  "role": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "permissions": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "enum": [
                                "machines:view",
                                "machines:manage",
                                "machines:create",
                                "machines:update_machines_group",
                                "machines:delete",
                                "machines:ingest_data",
                                "machines:generate_certs",
                                "machines:firmmware_update",
                                "machines:firmware:manage",
                                "machines:config:manage",
                                "machines:config:configuration_level_1_read",
                                "machines:config:configuration_level_1_write",
                                "machines:config:configuration_level_2_read",
                                "machines:config:configuration_level_2_write",
                                "machines:config:configuration_level_3_read",
                                "machines:config:configuration_level_3_write",
                                "machines:config:configuration_level_4_read",
                                "machines:config:configuration_level_4_write",
                                "machines:config:configuration_level_5_read",
                                "machines:config:configuration_level_5_write",
                                "machines:commands:execute",
                                "machines_groups:manage",
                                "machine_models:manage",
                                "roles:manage",
                                "widgets:manage",
                                "users:view",
                                "users:manage",
                                "recipes:manage",
                                "sharing:manage",
                                "companies:view",
                                "companies:manage",
                                "service_ai:playground:view",
                                "service_ai:knowledge:view",
                                "service_ai:conversations:view"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "users_create_child_roles": {
                        "type": "array",
                        "description": "When creating a new user-machines-groups association these are the only roles the user is allowed to assign to the new user.",
                        "items": {
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ],
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/machines_machines_groups/{machine_id}/{machines_group_id}": {
      "delete": {
        "summary": "Delete",
        "description": "Delete an association between a device and a devices group.",
        "operationId": "delete-device-devices-group-association",
        "parameters": [
          {
            "name": "machine_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "machines_group_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/aggregated_metrics": {
      "get": {
        "summary": "Aggregated metrics",
        "description": "Returns the metrics aggregated using an aggregate function like average. If a time interval is provided data will be grouped according to it.",
        "operationId": "aggregated-metrics",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "UTC timestamp ISO 8601. E.g. 2021-07-27T00:00:00Z",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "UTC timestamp ISO 8601. E.g. 2021-07-27T00:00:00Z",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "metric_names[]",
            "in": "query",
            "description": "filter using metric names",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "aggregate_interval_in_minutes",
            "in": "query",
            "description": "If provided group data according to it. If not provided reponse data will be a single value.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "devices[]",
            "in": "query",
            "description": "the list of device ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "aggregate_function",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "min",
                "max",
                "increment",
                "avg",
                "sum"
              ]
            }
          },
          {
            "name": "value_field",
            "in": "query",
            "description": "data on things5 is aggregated per minute. avg is the average of that minute, min is the min of that minute and so on. Increment is the increment relative to that previous minute.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "avg",
                "min",
                "max",
                "increment",
                "sum",
                "first",
                "last"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "time interval": {
                    "value": "[{\n  \"aggregated_metrics\": [\n    {\n      \"data\": [\n        {\n          \"timestamp\": \"2020-12-31T00:00:00Z\",\n          \"value\": 12\n        },\n        {\n          \"timestamp\": \"2021-01-01T00:00:00Z\",\n          \"value\": 24\n        }\n      ],\n      \"id\": \"foo\"\n    }\n  ],\n  \"machine_id\": \"af4e1721-008b-4dac-bbf5-aff055dcceb5\"\n}]"
                  },
                  "single value": {
                    "value": "[{\n  \"aggregated_metrics\": [\n    {\n      \"data\": 36,\n      \"id\": \"foo\"\n    }\n  ],\n  \"machine_id\": \"af4e1721-008b-4dac-bbf5-aff055dcceb5\"\n}]"
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "title": "time interval",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "aggregated_metrics": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "timestamp": {
                                        "type": "string",
                                        "example": "2020-12-31T00:00:00Z"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "example": 12,
                                        "default": 0
                                      }
                                    }
                                  }
                                },
                                "id": {
                                  "type": "string",
                                  "example": "foo"
                                }
                              }
                            }
                          },
                          "machine_id": {
                            "type": "string",
                            "example": "af4e1721-008b-4dac-bbf5-aff055dcceb5"
                          }
                        }
                      }
                    },
                    {
                      "title": "single value",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "aggregated_metrics": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "integer",
                                  "example": 36,
                                  "default": 0
                                },
                                "id": {
                                  "type": "string",
                                  "example": "foo"
                                }
                              }
                            }
                          },
                          "machine_id": {
                            "type": "string",
                            "example": "af4e1721-008b-4dac-bbf5-aff055dcceb5"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes/machines/:{machine_id}/device_managed_recipes": {
      "get": {
        "summary": "Read recipes",
        "description": "Immediately trigger the mqtt message to be sent to the machine. [read recipes request](ref:read-recipes-request)\nDevice must be connected in order to read recipes",
        "operationId": "read-recipes",
        "parameters": [
          {
            "name": "metadata",
            "in": "query",
            "description": "eg: metadata[is_menu]=true&metadata[parent_id]=123",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "timeout",
            "in": "query",
            "description": "timeout in milliseconds, no more than 60000",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 60000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"request_id\": \"UUID sent in the request\",\n  \"recipes\": [\n    {\n      \"id\": \"uniqueid\",\n      \"can_be_edited\": true,\n      \"can_be_deleted\": false,\n      \"name\": \"Pollo con patate al cuore\",\n      \"description\": \"Recipe description\",\n      \"index\": 0,\n      \"phases\": [\n        {\n          \"dosages\": [\n            {\n              \"name\": \"yeast\",\n              \"quantity\": \"5.5\",\n              \"unit\": \"g\",\n              \"type\": \"float\",\n              \"metadata\": [\n                {\n                  \"name\": \"type\",\n                  \"value\": \"1\",\n                  \"type\": \"integer\"\n                },\n                {\n                  \"name\": \"temperature\",\n                  \"value\": \"20\",\n                  \"type\": \"integer\"\n                }\n              ]\n            }\n          ],\n\n          \"values\": [\n            {\n              \"name\": \"evaporator_fan_speed\",\n              \"value\": \"4\",\n              \"type\": \"integer\"\n            },\n            {\n              \"name\": \"core_temperature\",\n              \"value\": \"-5\",\n              \"type\": \"integer\"\n            },\n            {\n              \"name\": \"cell_temperature\",\n              \"value\": \"-20\",\n              \"type\": \"integer\"\n            }\n          ]\n        },\n        {\n          \"values\": [\n            {\n              \"name\": \"evaporator_fan_speed\",\n              \"value\": \"2\",\n              \"type\": \"integer\"\n            },\n            {\n              \"name\": \"core_temperature\",\n              \"value\": \"-5\",\n              \"type\": \"integer\"\n            },\n            {\n              \"name\": \"cell_temperature\",\n              \"value\": \"-20\",\n              \"type\": \"integer\"\n            }\n          ]\n        },\n        {\n          \"values\": [\n            {\n              \"name\": \"evaporator_fan_speed\",\n              \"value\": \"1\",\n              \"type\": \"integer\"\n            },\n            {\n              \"name\": \"core_temperature\",\n              \"value\": \"-5\",\n              \"type\": \"integer\"\n            },\n            {\n              \"name\": \"cell_temperature\",\n              \"value\": \"-20\",\n              \"type\": \"integer\"\n            }\n          ]\n        },\n        {\n          \"values\": [\n            {\n              \"name\": \"evaporator_fan_speed\",\n              \"value\": \"0\",\n              \"type\": \"integer\"\n            },\n            {\n              \"name\": \"cell_temperature\",\n              \"value\": \"-10\",\n              \"type\": \"integer\"\n            }\n          ]\n        }\n      ],\n      \"metadata\": [\n        {\n          \"name\": \"image_path\",\n          \"value\": \"../images/fish.jpg\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"index_in_list\",\n          \"value\": \"6\",\n          \"type\": \"integer\"\n        }\n      ]\n    }\n  ]\n}\n"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "example": "UUID sent in the request"
                    },
                    "recipes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "uniqueid"
                          },
                          "can_be_edited": {
                            "type": "boolean",
                            "example": true,
                            "default": true
                          },
                          "can_be_deleted": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          },
                          "name": {
                            "type": "string",
                            "example": "Pollo con patate al cuore"
                          },
                          "description": {
                            "type": "string",
                            "example": "Recipe description"
                          },
                          "index": {
                            "type": "integer",
                            "example": 0,
                            "default": 0
                          },
                          "phases": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "dosages": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "yeast"
                                      },
                                      "quantity": {
                                        "type": "string",
                                        "example": "5.5"
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "g"
                                      },
                                      "type": {
                                        "type": "string",
                                        "example": "float"
                                      },
                                      "metadata": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "type"
                                            },
                                            "value": {
                                              "type": "string",
                                              "example": "1"
                                            },
                                            "type": {
                                              "type": "string",
                                              "example": "integer"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "values": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "evaporator_fan_speed"
                                      },
                                      "value": {
                                        "type": "string",
                                        "example": "4"
                                      },
                                      "type": {
                                        "type": "string",
                                        "example": "integer"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "metadata": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "example": "image_path"
                                },
                                "value": {
                                  "type": "string",
                                  "example": "../images/fish.jpg"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes//machines/{machine_id}/device_managed_recipes/{recipe_id}": {
      "get": {
        "summary": "Read recipe",
        "description": "Immediately trigger the mqtt message to be sent to the machine. [read recipe request](ref:read-recipe-request)\nDevice must be connected in order to read recipe",
        "operationId": "read-device-managed-recipes",
        "parameters": [
          {
            "name": "recipe_id",
            "in": "path",
            "description": "this id will be sent to the device. It can be anything",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "machine_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"request_id\": \"UUID sent in the request\",\n  \"recipe\": {\n    \"id\": \"uniqueid\",\n    \"can_be_edited\": true,\n    \"can_be_deleted\": false,\n    \"name\": \"Pollo con patate al cuore\",\n    \"description\": \"Recipe description\",\n    \"index\": 1,\n    \"phases\": [\n      {\n        \"dosages\": \n          [\n            {\n              \"name\": \"yeast\",\n              \"quantity\": \"5.5\",\n              \"type\": \"float\",\n              \"unit\": \"g\",\n              \"metadata\" : [{\n                \"name\": \"type\",\n                \"value\": \"1\",\n                \"type\": \"integer\"\n              }, {\n                \"name\": \"temperature\",\n                \"value\": \"20\",\n                \"type\": \"integer\"\n              }]\n            }\n          ],\n        \n        \"values\": [\n          {\n            \"name\": \"evaporator_fan_speed\",\n            \"value\": \"4\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"core_temperature\",\n            \"value\": \"-5\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"cell_temperature\",\n            \"value\": \"-20\",\n            \"type\": \"integer\"\n          }\n        ]\n      },\n      {\n        \"values\": [\n          {\n            \"name\": \"evaporator_fan_speed\",\n            \"value\": \"2\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"core_temperature\",\n            \"value\": \"-5\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"cell_temperature\",\n            \"value\": \"-20\",\n            \"type\": \"integer\"\n          }\n        ]\n      },\n      {\n        \"values\": [\n          {\n            \"name\": \"evaporator_fan_speed\",\n            \"value\": \"1\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"core_temperature\",\n            \"value\": \"-5\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"cell_temperature\",\n            \"value\": \"-20\",\n            \"type\": \"integer\"\n          }\n        ]\n      },\n      {\n        \"values\": [\n          {\n            \"name\": \"evaporator_fan_speed\",\n            \"value\": \"0\",\n            \"type\": \"integer\"\n          },\n          {\n            \"name\": \"cell_temperature\",\n            \"value\": \"-10\",\n            \"type\": \"integer\"\n          }\n        ]\n      }\n    ],\n    \"metadata\": [\n      {\n        \"name\": \"image_path\",\n        \"value\": \"../images/fish.jpg\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"index_in_list\",\n        \"value\": \"6\",\n        \"type\": \"integer\"\n      }\n    ]\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "example": "UUID sent in the request"
                    },
                    "recipe": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "uniqueid"
                        },
                        "can_be_edited": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "can_be_deleted": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "name": {
                          "type": "string",
                          "example": "Pollo con patate al cuore"
                        },
                        "description": {
                          "type": "string",
                          "example": "Recipe description"
                        },
                        "index": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        },
                        "phases": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "dosages": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "example": "yeast"
                                    },
                                    "quantity": {
                                      "type": "string",
                                      "example": "5.5"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "float"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "example": "g"
                                    },
                                    "metadata": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "type"
                                          },
                                          "value": {
                                            "type": "string",
                                            "example": "1"
                                          },
                                          "type": {
                                            "type": "string",
                                            "example": "integer"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "values": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "example": "evaporator_fan_speed"
                                    },
                                    "value": {
                                      "type": "string",
                                      "example": "4"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "metadata": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "image_path"
                              },
                              "value": {
                                "type": "string",
                                "example": "../images/fish.jpg"
                              },
                              "type": {
                                "type": "string",
                                "example": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes/machines/{machine_id}/device_managed_recipes": {
      "post": {
        "summary": "Write recipe",
        "description": "Immediately trigger the mqtt message to be sent to the machine. [write recipe request](ref:write-recipe-request)\nDevice must be connected in order to write recipe. The device will handle the writing process, updating or creating the recipe. It should create a new recipe if no id is present and update it if id is present.",
        "operationId": "write-device-managed-recipe",
        "parameters": [
          {
            "name": "machine_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "recipe"
                ],
                "properties": {
                  "recipe": {
                    "type": "object",
                    "required": [
                      "machine_id",
                      "name",
                      "unique_id"
                    ],
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "last_update": {
                        "type": "string"
                      },
                      "machine_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "pending_update": {
                        "type": "boolean",
                        "description": "wheter the recipe is being synched. False when device has processed update request"
                      },
                      "unique_id": {
                        "type": "string",
                        "description": "Things5 unique id that reppresents a recipe in Things5"
                      },
                      "user_id": {
                        "type": "string"
                      },
                      "phases": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "values": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "string",
                                      "integer",
                                      "float",
                                      "bool"
                                    ]
                                  }
                                },
                                "required": [
                                  "name",
                                  "value",
                                  "type"
                                ],
                                "type": "object"
                              }
                            },
                            "dosages": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "quantity": {
                                    "type": "string"
                                  },
                                  "unit": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "string",
                                      "integer",
                                      "float"
                                    ]
                                  },
                                  "metadata": {
                                    "type": "array",
                                    "items": {
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "string",
                                            "integer",
                                            "float",
                                            "bool"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "value",
                                        "type"
                                      ],
                                      "type": "object"
                                    }
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "type": "object"
                              }
                            }
                          },
                          "type": "object"
                        }
                      },
                      "metadata": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "string",
                                "integer",
                                "float",
                                "bool"
                              ]
                            }
                          },
                          "required": [
                            "name",
                            "value",
                            "type"
                          ],
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes/machines/{machine_id}/device_managed_recipes/{recipe_id}": {
      "delete": {
        "summary": "Delete recipe",
        "description": "Immediately trigger the mqtt message to be sent to the machine. [delete recipe request](ref:delete-recipe-request)\nDevice must be connected in order to delete recipe",
        "operationId": "delete-device-managed-recipe",
        "parameters": [
          {
            "name": "recipe_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "machine_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/overview/events": {
      "get": {
        "summary": "Events",
        "description": "Given a list of machine_ids and a time interval returns the list of events",
        "operationId": "overview-events",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "machine_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "2023-10-05T10:17:51.993Z",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "2023-10-05T10:17:51.993Z",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "Pagination parameter. If there are a lot of items only some will be present in data field. To get the remaining items repeat the API call using the after parameter present in the body of the previous request"
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit the results in the response",
            "schema": {
              "type": "string",
              "default": "10"
            }
          },
          {
            "name": "severities[]",
            "in": "query",
            "description": "Filter by severities (alarm, warning, info). Default all severities",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "include_severity",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "false"
            }
          },
          {
            "name": "notifications_only",
            "in": "query",
            "description": "Return only events that the user has enabled as notification",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"description\": \"Lorem Ipsum\",\n      \"metadata\": {},\n      \"name\": \"alarm_1\",\n      \"severity\": \"alarm\",\n      \"timestamp\": \"2021-01-01T00:00:00Z\",\n      \"translation\": \"Porta aperta\",\n      \"machine\": {\n        \"serial\": \"1234\",\n        \"name\": \"machine 1\",\n        \"id\": \"057ddd76-2d3f-46a3-8e5d-be97cfa9f271\"\n      }\n    }\n  ],\n  \"pagination\": {\"after\": null, \"total_count\": 1}\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "example": "Lorem Ipsum"
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {}
                          },
                          "name": {
                            "type": "string",
                            "example": "alarm_1"
                          },
                          "severity": {
                            "type": "string",
                            "example": "alarm"
                          },
                          "timestamp": {
                            "type": "string",
                            "example": "2021-01-01T00:00:00Z"
                          },
                          "translation": {
                            "type": "string",
                            "example": "Porta aperta"
                          },
                          "machine": {
                            "type": "object",
                            "properties": {
                              "serial": {
                                "type": "string",
                                "example": "1234"
                              },
                              "name": {
                                "type": "string",
                                "example": "machine 1"
                              },
                              "id": {
                                "type": "string",
                                "example": "057ddd76-2d3f-46a3-8e5d-be97cfa9f271"
                              }
                            }
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "after": {},
                        "total_count": {
                          "type": "integer",
                          "example": 1,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/token_exchange_sessions/{tolen_exchange_session}/consume": {
      "post": {
        "summary": "Token exchange",
        "description": "Consume a token exchange session authorizing the device that requested the token exchange. This will trigger a mqtt message to be sent to requester device [token exchange response](token-exchange-response)",
        "operationId": "token-exchange",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "tolen_exchange_session",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/plans": {
      "get": {
        "summary": "Plans list",
        "description": "",
        "operationId": "plans-list",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "include_machine_plans_count",
            "in": "query",
            "description": "include machine_plans_count in the response, the number of organization's machines with that plan",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"created_by_email\": \"user12@example.com\",\n      \"duration_days\": 30,\n      \"id\": \"359c4c3d-68fd-4123-bcea-0569128bbcca\",\n      \"inserted_at\": \"2025-02-10T09:35:16\",\n      \"is_default\": false,\n      \"is_fallback\": false,\n      \"machine_plans_count\": null,\n      \"name\": \"Plan 36\",\n      \"organization_id\": \"6efe1ff2-526c-4f51-8618-b84f3d06ef7b\",\n      \"plan_permissions\": null,\n      \"tolerance_days\": 7,\n      \"updated_at\": \"2025-02-10T09:35:16\",\n      \"updated_by_email\": \"user13@example.com\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "created_by_email": {
                            "type": "string",
                            "example": "user12@example.com"
                          },
                          "duration_days": {
                            "type": "integer",
                            "example": 30,
                            "default": 0
                          },
                          "id": {
                            "type": "string",
                            "example": "359c4c3d-68fd-4123-bcea-0569128bbcca"
                          },
                          "inserted_at": {
                            "type": "string",
                            "example": "2025-02-10T09:35:16"
                          },
                          "is_default": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          },
                          "is_fallback": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          },
                          "machine_plans_count": {},
                          "name": {
                            "type": "string",
                            "example": "Plan 36"
                          },
                          "organization_id": {
                            "type": "string",
                            "example": "6efe1ff2-526c-4f51-8618-b84f3d06ef7b"
                          },
                          "plan_permissions": {},
                          "tolerance_days": {
                            "type": "integer",
                            "example": 7,
                            "default": 0
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "2025-02-10T09:35:16"
                          },
                          "updated_by_email": {
                            "type": "string",
                            "example": "user13@example.com"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Plans create",
        "description": "",
        "operationId": "plans-create",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "plan"
                ],
                "properties": {
                  "plan": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "duration_days": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "tolerance_days": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "is_fallback": {
                        "type": "boolean"
                      },
                      "is_default": {
                        "type": "boolean"
                      },
                      "created_by_email": {
                        "type": "string"
                      },
                      "updated_by_email": {
                        "type": "string"
                      },
                      "machine_plans_count": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "organization_id": {
                        "type": "string"
                      },
                      "plan_permissions": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "enum": [
                                "machines:view",
                                "machines:manage",
                                "machines:create",
                                "machines:update_machines_group",
                                "machines:delete",
                                "machines:ingest_data",
                                "machines:generate_certs",
                                "machines:firmmware_update",
                                "machines:firmware:manage",
                                "machines:config:manage",
                                "machines:config:configuration_level_1_read",
                                "machines:config:configuration_level_1_write",
                                "machines:config:configuration_level_2_read",
                                "machines:config:configuration_level_2_write",
                                "machines:config:configuration_level_3_read",
                                "machines:config:configuration_level_3_write",
                                "machines:config:configuration_level_4_read",
                                "machines:config:configuration_level_4_write",
                                "machines:config:configuration_level_5_read",
                                "machines:config:configuration_level_5_write",
                                "machines:commands:execute",
                                "machines_groups:manage",
                                "machine_models:manage",
                                "roles:manage",
                                "widgets:manage",
                                "users:view",
                                "users:manage",
                                "recipes:manage",
                                "sharing:manage",
                                "companies:view",
                                "companies:manage",
                                "service_ai:playground:view",
                                "service_ai:knowledge:view",
                                "service_ai:conversations:view"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"created_by_email\": \"user0@example.com\",\n  \"duration_days\": 30,\n  \"id\": \"3b633bb4-9f4c-408c-b790-d3593c45f886\",\n  \"inserted_at\": \"2025-02-10T09:46:25\",\n  \"is_default\": false,\n  \"is_fallback\": false,\n  \"machine_plans_count\": null,\n  \"name\": \"Plan 0\",\n  \"organization_id\": \"7faa45c0-9e52-44dc-b4d4-0ffc4b124dfb\",\n  \"plan_permissions\": null,\n  \"tolerance_days\": 7,\n  \"updated_at\": \"2025-02-10T09:46:25\",\n  \"updated_by_email\": \"user1@example.com\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "created_by_email": {
                      "type": "string",
                      "example": "user0@example.com"
                    },
                    "duration_days": {
                      "type": "integer",
                      "example": 30,
                      "default": 0
                    },
                    "id": {
                      "type": "string",
                      "example": "3b633bb4-9f4c-408c-b790-d3593c45f886"
                    },
                    "inserted_at": {
                      "type": "string",
                      "example": "2025-02-10T09:46:25"
                    },
                    "is_default": {
                      "type": "boolean",
                      "example": false,
                      "default": true
                    },
                    "is_fallback": {
                      "type": "boolean",
                      "example": false,
                      "default": true
                    },
                    "machine_plans_count": {},
                    "name": {
                      "type": "string",
                      "example": "Plan 0"
                    },
                    "organization_id": {
                      "type": "string",
                      "example": "7faa45c0-9e52-44dc-b4d4-0ffc4b124dfb"
                    },
                    "plan_permissions": {},
                    "tolerance_days": {
                      "type": "integer",
                      "example": 7,
                      "default": 0
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2025-02-10T09:46:25"
                    },
                    "updated_by_email": {
                      "type": "string",
                      "example": "user1@example.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/plans/{plan_id}": {
      "get": {
        "summary": "Plans detail",
        "description": "",
        "operationId": "plans-detail",
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"created_by_email\": \"user0@example.com\",\n    \"duration_days\": 30,\n    \"id\": \"9c920740-a365-49f5-a13f-d589a56b5ba7\",\n    \"inserted_at\": \"2025-02-10T09:43:40\",\n    \"is_default\": false,\n    \"is_fallback\": false,\n    \"machine_plans_count\": null,\n    \"name\": \"Plan 0\",\n    \"organization_id\": \"aa52334d-e4e5-4bce-aa25-1b8e02702bf2\",\n    \"plan_permissions\": [],\n    \"tolerance_days\": 7,\n    \"updated_at\": \"2025-02-10T09:43:40\",\n    \"updated_by_email\": \"user1@example.com\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "created_by_email": {
                          "type": "string",
                          "example": "user0@example.com"
                        },
                        "duration_days": {
                          "type": "integer",
                          "example": 30,
                          "default": 0
                        },
                        "id": {
                          "type": "string",
                          "example": "9c920740-a365-49f5-a13f-d589a56b5ba7"
                        },
                        "inserted_at": {
                          "type": "string",
                          "example": "2025-02-10T09:43:40"
                        },
                        "is_default": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "is_fallback": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "machine_plans_count": {},
                        "name": {
                          "type": "string",
                          "example": "Plan 0"
                        },
                        "organization_id": {
                          "type": "string",
                          "example": "aa52334d-e4e5-4bce-aa25-1b8e02702bf2"
                        },
                        "plan_permissions": {
                          "type": "array"
                        },
                        "tolerance_days": {
                          "type": "integer",
                          "example": 7,
                          "default": 0
                        },
                        "updated_at": {
                          "type": "string",
                          "example": "2025-02-10T09:43:40"
                        },
                        "updated_by_email": {
                          "type": "string",
                          "example": "user1@example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Plans Update",
        "description": "",
        "operationId": "plans-update",
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "plan": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "duration_days": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "tolerance_days": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "is_fallback": {
                        "type": "boolean"
                      },
                      "is_default": {
                        "type": "boolean"
                      },
                      "created_by_email": {
                        "type": "string"
                      },
                      "updated_by_email": {
                        "type": "string"
                      },
                      "machine_plans_count": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "organization_id": {
                        "type": "string"
                      },
                      "plan_permissions": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "enum": [
                                "machines:view",
                                "machines:manage",
                                "machines:create",
                                "machines:update_machines_group",
                                "machines:delete",
                                "machines:ingest_data",
                                "machines:generate_certs",
                                "machines:firmmware_update",
                                "machines:firmware:manage",
                                "machines:config:manage",
                                "machines:config:configuration_level_1_read",
                                "machines:config:configuration_level_1_write",
                                "machines:config:configuration_level_2_read",
                                "machines:config:configuration_level_2_write",
                                "machines:config:configuration_level_3_read",
                                "machines:config:configuration_level_3_write",
                                "machines:config:configuration_level_4_read",
                                "machines:config:configuration_level_4_write",
                                "machines:config:configuration_level_5_read",
                                "machines:config:configuration_level_5_write",
                                "machines:commands:execute",
                                "machines_groups:manage",
                                "machine_models:manage",
                                "roles:manage",
                                "widgets:manage",
                                "users:view",
                                "users:manage",
                                "recipes:manage",
                                "sharing:manage",
                                "companies:view",
                                "companies:manage",
                                "service_ai:playground:view",
                                "service_ai:knowledge:view",
                                "service_ai:conversations:view"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"created_by_email\": \"user2@example.com\",\n    \"duration_days\": 30,\n    \"id\": \"69f5ff77-d2ff-44a8-a6da-382b3ef24be4\",\n    \"inserted_at\": \"2025-02-10T09:51:06\",\n    \"is_default\": false,\n    \"is_fallback\": false,\n    \"machine_plans_count\": null,\n    \"name\": \"Plan 2\",\n    \"organization_id\": \"3e5fc554-fdf6-49b3-824c-341498a05c56\",\n    \"plan_permissions\": [],\n    \"tolerance_days\": 7,\n    \"updated_at\": \"2025-02-10T09:51:06\",\n    \"updated_by_email\": \"user3@example.com\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "created_by_email": {
                          "type": "string",
                          "example": "user2@example.com"
                        },
                        "duration_days": {
                          "type": "integer",
                          "example": 30,
                          "default": 0
                        },
                        "id": {
                          "type": "string",
                          "example": "69f5ff77-d2ff-44a8-a6da-382b3ef24be4"
                        },
                        "inserted_at": {
                          "type": "string",
                          "example": "2025-02-10T09:51:06"
                        },
                        "is_default": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "is_fallback": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "machine_plans_count": {},
                        "name": {
                          "type": "string",
                          "example": "Plan 2"
                        },
                        "organization_id": {
                          "type": "string",
                          "example": "3e5fc554-fdf6-49b3-824c-341498a05c56"
                        },
                        "plan_permissions": {
                          "type": "array"
                        },
                        "tolerance_days": {
                          "type": "integer",
                          "example": 7,
                          "default": 0
                        },
                        "updated_at": {
                          "type": "string",
                          "example": "2025-02-10T09:51:06"
                        },
                        "updated_by_email": {
                          "type": "string",
                          "example": "user3@example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Plan delete",
        "description": "",
        "operationId": "plan-delete",
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/plans/emails": {
      "get": {
        "summary": "Emails list",
        "description": "",
        "operationId": "plan-emails-list",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"days_before\": 7,\n      \"id\": \"574ed7f9-ad6d-41e3-ab3e-eba12cf73caf\",\n      \"inserted_at\": \"2025-02-10T12:14:09\",\n      \"organization_id\": \"fc67e15d-6ea3-4c57-8917-0b73780cf374\",\n      \"translations\": {\n        \"en\": {\n          \"message\": \"Plan activation message\",\n          \"subject\": \"Plan Activation\"\n        }\n      },\n      \"type\": \"activation\",\n      \"updated_at\": \"2025-02-10T12:14:09\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "days_before": {
                            "type": "integer",
                            "example": 7,
                            "default": 0
                          },
                          "id": {
                            "type": "string",
                            "example": "574ed7f9-ad6d-41e3-ab3e-eba12cf73caf"
                          },
                          "inserted_at": {
                            "type": "string",
                            "example": "2025-02-10T12:14:09"
                          },
                          "organization_id": {
                            "type": "string",
                            "example": "fc67e15d-6ea3-4c57-8917-0b73780cf374"
                          },
                          "translations": {
                            "type": "object",
                            "properties": {
                              "en": {
                                "type": "object",
                                "properties": {
                                  "message": {
                                    "type": "string",
                                    "example": "Plan activation message"
                                  },
                                  "subject": {
                                    "type": "string",
                                    "example": "Plan Activation"
                                  }
                                }
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "example": "activation"
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "2025-02-10T12:14:09"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Email create",
        "description": "",
        "operationId": "plan-email",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "plan_email": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "activation",
                          "expiration",
                          "expired"
                        ]
                      },
                      "translations": {
                        "type": "object",
                        "properties": {}
                      },
                      "days_before": {
                        "type": "integer",
                        "description": "available only for type expiration",
                        "format": "int32"
                      },
                      "organization_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/plans/emails/{plan_email_type}": {
      "patch": {
        "summary": "Email update",
        "description": "",
        "operationId": "plan-email-update",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "plan_email_type",
            "in": "path",
            "schema": {
              "type": "string",
              "enum": [
                "activation",
                "expiration",
                "expired"
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "plan_email": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "activation",
                          "expiration",
                          "expired"
                        ]
                      },
                      "translations": {
                        "type": "object",
                        "properties": {}
                      },
                      "days_before": {
                        "type": "integer",
                        "description": "available only for type expiration",
                        "format": "int32"
                      },
                      "organization_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"days_before\": 10,\n      \"id\": \"574ed7f9-ad6d-41e3-ab3e-eba12cf73caf\",\n      \"inserted_at\": \"2025-02-10T12:14:09\",\n      \"organization_id\": \"fc67e15d-6ea3-4c57-8917-0b73780cf374\",\n      \"translations\": {\n        \"en\": {\n          \"message\": \"Plan activation message\",\n          \"subject\": \"Plan Activation\"\n        }\n      },\n      \"type\": \"activation\",\n      \"updated_at\": \"2025-02-10T12:14:09\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "days_before": {
                            "type": "integer",
                            "example": 10,
                            "default": 0
                          },
                          "id": {
                            "type": "string",
                            "example": "574ed7f9-ad6d-41e3-ab3e-eba12cf73caf"
                          },
                          "inserted_at": {
                            "type": "string",
                            "example": "2025-02-10T12:14:09"
                          },
                          "organization_id": {
                            "type": "string",
                            "example": "fc67e15d-6ea3-4c57-8917-0b73780cf374"
                          },
                          "translations": {
                            "type": "object",
                            "properties": {
                              "en": {
                                "type": "object",
                                "properties": {
                                  "message": {
                                    "type": "string",
                                    "example": "Plan activation message"
                                  },
                                  "subject": {
                                    "type": "string",
                                    "example": "Plan Activation"
                                  }
                                }
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "example": "activation"
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "2025-02-10T12:14:09"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/plans/machines/{machine_id}": {
      "put": {
        "summary": "Upsert machine plan",
        "description": "",
        "operationId": "upsert-machine-plan",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "machine_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "machine_plan"
                ],
                "properties": {
                  "machine_plan": {
                    "type": "object",
                    "properties": {
                      "activation": {
                        "type": "string",
                        "description": "e.g. \"2025-02-11T08:09:42.199702Z\""
                      },
                      "expiration": {
                        "type": "string",
                        "description": "e.g. \"2025-02-11T08:09:42.199702Z\""
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"activation\": \"2025-02-11T08:09:42.199702Z\",\n  \"expiration\": \"2025-03-13T08:09:42.199668Z\",\n  \"inserted_at\": \"2025-02-11T08:09:42\",\n  \"machine_id\": \"a2d78098-8a56-4d2f-9201-a990b15df26e\",\n  \"plan_id\": \"17dd695c-8dc3-42ed-9076-2e36b2b2e340\",\n  \"updated_at\": \"2025-02-11T08:09:42\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "activation": {
                      "type": "string",
                      "example": "2025-02-11T08:09:42.199702Z"
                    },
                    "expiration": {
                      "type": "string",
                      "example": "2025-03-13T08:09:42.199668Z"
                    },
                    "inserted_at": {
                      "type": "string",
                      "example": "2025-02-11T08:09:42"
                    },
                    "machine_id": {
                      "type": "string",
                      "example": "a2d78098-8a56-4d2f-9201-a990b15df26e"
                    },
                    "plan_id": {
                      "type": "string",
                      "example": "17dd695c-8dc3-42ed-9076-2e36b2b2e340"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2025-02-11T08:09:42"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/plans/machines/batch_upsert_plans": {
      "put": {
        "summary": "Batch upsert machines plan",
        "description": "",
        "operationId": "batch-upsert-machine-plans",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "machine_ids",
                  "activation",
                  "expiration",
                  "plan_id"
                ],
                "properties": {
                  "machine_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "activation": {
                    "type": "string"
                  },
                  "expiration": {
                    "type": "string"
                  },
                  "plan_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"activation\": \"2025-02-11T09:59:28.533031Z\",\n      \"expiration\": \"2025-03-13T09:59:28.533052Z\",\n      \"inserted_at\": \"2025-02-11T09:59:28\",\n      \"machine_id\": \"1dd1e7fb-5acc-47c1-a8a8-93f4a583099d\",\n      \"plan_id\": \"f30df4ca-e571-4962-b4ef-66001d0b7b97\",\n      \"updated_at\": \"2025-02-11T09:59:28\"\n    }\n  ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "activation": {
                            "type": "string",
                            "example": "2025-02-11T09:59:28.533031Z"
                          },
                          "expiration": {
                            "type": "string",
                            "example": "2025-03-13T09:59:28.533052Z"
                          },
                          "inserted_at": {
                            "type": "string",
                            "example": "2025-02-11T09:59:28"
                          },
                          "machine_id": {
                            "type": "string",
                            "example": "1dd1e7fb-5acc-47c1-a8a8-93f4a583099d"
                          },
                          "plan_id": {
                            "type": "string",
                            "example": "f30df4ca-e571-4962-b4ef-66001d0b7b97"
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "2025-02-11T09:59:28"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/plans/emails/audience": {
      "get": {
        "summary": "Audience detail",
        "description": "",
        "operationId": "audience",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"admins\": true,\n    \"emails\": [\"recipient12@example.com\"],\n    \"machine_viewers\": false,\n    \"organization_id\": \"c6593db3-1a7f-48a7-84ec-40cedf8d7e3d\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "admins": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "recipient12@example.com"
                          }
                        },
                        "machine_viewers": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "organization_id": {
                          "type": "string",
                          "example": "c6593db3-1a7f-48a7-84ec-40cedf8d7e3d"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Audience upsert",
        "description": "",
        "operationId": "audience-upsert",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "plan_emails_audience": {
                    "type": "object",
                    "properties": {
                      "organization_id": {
                        "type": "string"
                      },
                      "include_admins": {
                        "type": "boolean"
                      },
                      "include_machine_viewers": {
                        "type": "boolean"
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"admins\": true,\n    \"emails\": [\"recipient12@example.com\"],\n    \"machine_viewers\": false,\n    \"organization_id\": \"c6593db3-1a7f-48a7-84ec-40cedf8d7e3d\"\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "admins": {
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "recipient12@example.com"
                          }
                        },
                        "machine_viewers": {
                          "type": "boolean",
                          "example": false,
                          "default": true
                        },
                        "organization_id": {
                          "type": "string",
                          "example": "c6593db3-1a7f-48a7-84ec-40cedf8d7e3d"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/plans/{plan_id/set_default": {
      "post": {
        "summary": "Set default plan",
        "description": "",
        "operationId": "set-default-plan",
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/plans/{plan_id}/set_fallback": {
      "post": {
        "summary": "Set fallback plan",
        "description": "",
        "operationId": "set-fallback-plan",
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/devices": {
      "get": {
        "summary": "Device list",
        "description": "Retrieve the list of devices that the user is allowed to see",
        "operationId": "device-list",
        "parameters": [
          {
            "name": "serial",
            "in": "query",
            "description": "Filter by device serial",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Pagination parameter. If there are a lot of items only some will be present in data field. To get the remaining items repeat the API call using the after parameter present in the body of the previous request",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Filter by name and serial",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_machine_model",
            "in": "query",
            "description": "Includues also machine model info in the response",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "machine_groups_ids[]",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "connected",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "no_group_assigned",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "include_machines_group",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "machine_model_ids[]",
            "in": "query",
            "description": "Filter by machine models",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "include_machine_plans",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": [\n    {\n      \"active\": false,\n      \"id\": \"002fadff-702c-4b4f-ac10-0d4847b0350e\",\n      \"is_connected\": true,\n      \"machine_firmware_id\": \"24ead0b7-0e1a-4ba8-a9b6-af68a14b2ee8\",\n      \"name\": \"FOO\",\n      \"serial\": \"ABCDE\",\n      \"machine_model\": {\n        \"id\": \"7157a385-5249-4ba3-b01d-98f62a5320df\",\n        \"identifier\": \"AV-45\",\n        \"image\": \"https://assets.com/sample-image.png\",\n        \"machine_firmwares\": null,\n        \"main_firmware\": null,\n        \"name\": \"Foo\"\n      }\n    },\n    {\n      \"active\": false,\n      \"id\": \"00b88fd1-1713-4291-b31f-df595bc816c1\",\n      \"is_connected\": false,\n      \"machine_firmware_id\": \"cfa7d97a-0879-4cea-a68f-a08536ebe9a8\",\n      \"machines_group\": {\n        \"category\": null,\n        \"category_id\": \"19127fd9-46dc-48b9-bca6-935f13e71e7e\",\n        \"id\": \"ed6e122d-954b-42f3-accc-7f7be4717ea4\",\n        \"machines\": null,\n        \"name\": \"Collaudo\",\n        \"organization_id\": \"82a0e3fe-d553-42ba-a5dc-48ed221c5c8f\",\n        \"parent_id\": null\n      },\n      \"name\": \"BAR\",\n      \"serial\": \"foo\",\n      \"machine_model\": {\n        \"id\": \"7157a385-5249-4ba3-b01d-98f62a5320df\",\n        \"identifier\": \"AV-45\",\n        \"image\": \"https://assets.com/sample-image.png\",\n        \"machine_firmwares\": null,\n        \"main_firmware\": null,\n        \"name\": \"Foo\"\n      },\n      \"machine_plans\": [{\n        \"plan\": {\n          \"id\": \"40ef38a5-0231-4f67-816a-31e9601b0b27\",\n          \"name\": \"Plan 2\",\n          \"duration_days\": 30,\n          \"tolerance_days\": 7,\n          \"is_fallback\": false,\n          \"is_default\": false,\n          \"created_by_email\": \"user8@example.com\",\n          \"updated_by_email\": \"user9@example.com\",\n          \"machine_plans_count\": null,\n          \"organization_id\": \"bacb8f27-939c-433d-b61a-3d43adb104b5\",\n          \"organization\": null,\n          \"machine_plans\": null,\n          \"machines\": null,\n          \"plan_permissions\": null,\n          \"inserted_at\": \"2023-02-06T08:41:57Z\",\n          \"updated_at\": \"2023-02-06T08:41:57Z\"\n        },\n        \"activation\": \"2023-02-06T08:41:57Z\",\n        \"expiration\": \"2023-04-06T08:41:57Z\"\n      }]\n    }\n  ],\n  \"pagination\": {\n    \"after\": \"g3QAAAABZAACaWRtAAAAJDAzMjE4YjRjLTAxYzEtNDI3MC04ZmQzLTg2ZmY1N2ZhNzlhMw==\",\n    \"count_total\": 1000\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "active": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          },
                          "id": {
                            "type": "string",
                            "example": "002fadff-702c-4b4f-ac10-0d4847b0350e"
                          },
                          "is_connected": {
                            "type": "boolean",
                            "example": true,
                            "default": true
                          },
                          "machine_firmware_id": {
                            "type": "string",
                            "example": "24ead0b7-0e1a-4ba8-a9b6-af68a14b2ee8"
                          },
                          "name": {
                            "type": "string",
                            "example": "FOO"
                          },
                          "serial": {
                            "type": "string",
                            "example": "ABCDE"
                          },
                          "machine_model": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "7157a385-5249-4ba3-b01d-98f62a5320df"
                              },
                              "identifier": {
                                "type": "string",
                                "example": "AV-45"
                              },
                              "image": {
                                "type": "string",
                                "example": "https://assets.com/sample-image.png"
                              },
                              "machine_firmwares": {},
                              "main_firmware": {},
                              "name": {
                                "type": "string",
                                "example": "Foo"
                              }
                            }
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "after": {
                          "type": "string",
                          "example": "g3QAAAABZAACaWRtAAAAJDAzMjE4YjRjLTAxYzEtNDI3MC04ZmQzLTg2ZmY1N2ZhNzlhMw=="
                        },
                        "count_total": {
                          "type": "integer",
                          "example": 1000,
                          "default": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/service/{organization_id}/knowledge_base/document_file": {
      "post": {
        "summary": "Create new document",
        "description": "Upload a new file to the platform.",
        "operationId": "create-new-document",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "RAW_BODY": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Request Example": {
                  "value": {
                    "document_name": "lele's personal document",
                    "images_definition": {
                      "images": [
                        {
                          "file_name": "gigino.png",
                          "label": "fg.1.2",
                          "uuid": "9ca35fd7-226b-4084-849f-71193d39f5e2"
                        },
                        {
                          "file_name": "7c015927-7ae6-4088-97ec-7d6f31378097.png",
                          "label": "fig.1.3",
                          "uuid": "7c015927-7ae6-4088-97ec-7d6f31378097"
                        }
                      ],
                      "upload_request_id": "9f05cfc0-9587-4be7-9215-3b4f24fd77cb"
                    },
                    "raw_sections": [
                      {
                        "title": "demo title",
                        "content": "this is a text that explains how include [beautiful image](9ca35fd7-226b-4084-849f-71193d39f5e2) or some different content [another image](7c015927-7ae6-4088-97ec-7d6f31378097)"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/service/{organization_id}/knowledge_base/images_upload_request": {
      "get": {
        "summary": "Get Upload images link",
        "description": "Used to get a presigned URL to upload an images archive",
        "operationId": "upload-images",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"expires_at\": \"2025-05-18T10:00:00Z\",\n  \"file_name\": \"9f05cfc0-9587-4be7-9215-3b4f24fd77cb.zip\",\n  \"pre_signed_url\": \"https://..../9f05cfc0-9587-4be7-9215-3b4f24fd77cb.zip\",\n  \"upload_request_id\": \"9f05cfc0-9587-4be7-9215-3b4f24fd77cb\"\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "expires_at": {
                      "type": "string",
                      "example": "2025-05-18T10:00:00Z"
                    },
                    "file_name": {
                      "type": "string",
                      "example": "9f05cfc0-9587-4be7-9215-3b4f24fd77cb.zip"
                    },
                    "pre_signed_url": {
                      "type": "string",
                      "example": "https://..../9f05cfc0-9587-4be7-9215-3b4f24fd77cb.zip"
                    },
                    "upload_request_id": {
                      "type": "string",
                      "example": "9f05cfc0-9587-4be7-9215-3b4f24fd77cb"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/machine_models/{machine_model_id}/events_notifications": {
      "get": {
        "summary": "List event notifications",
        "description": "",
        "operationId": "list-event-notifications",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "machine_model_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"data\": [\n        {\n            \"event_name\": \"BLOCKED COMPRESSOR ALARM\",\n            \"machines\": [\n                {\n                    \"enabled\": false,\n                    \"event_label\": \"BLOCKED COMPRESSOR ALARM\",\n                    \"id\": \"a7cb2ea8-80c5-45c4-b33d-6c08c23941db\",\n                    \"name\": \"machine 1\",\n                    \"serial\": \"1234\"\n                },\n                {\n                    \"enabled\": false,\n                    \"event_label\": \"BLOCKED COMPRESSOR ALARM\",\n                    \"id\": \"359f139c-df79-4d6a-a409-75b8f80b18ce\",\n                    \"name\": \"other machine\",\n                    \"serial\": \"ADS32445\"\n                }\n            ],\n            \"severity\": \"alarm\"\n        },\n        {\n            \"event_name\": \"CELL TEMPERATURE PROBE ERROR\",\n            \"machines\": [\n                {\n                    \"enabled\": false,\n                    \"event_label\": \"CELL TEMPERATURE PROBE ERROR\",\n                    \"id\": \"a7cb2ea8-80c5-45c4-b33d-6c08c23941db\",\n                    \"name\": \"machine 1\",\n                    \"serial\": \"1234\"\n                },\n                {\n                    \"enabled\": false,\n                    \"event_label\": \"CELL TEMPERATURE PROBE ERROR\",\n                    \"id\": \"359f139c-df79-4d6a-a409-75b8f80b18ce\",\n                    \"name\": \"other machine\",\n                    \"serial\": \"ADS32445\"\n                }\n            ],\n            \"severity\": \"alarm\"\n        }\n    ]\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "event_name": {
                            "type": "string",
                            "example": "BLOCKED COMPRESSOR ALARM"
                          },
                          "machines": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "example": false,
                                  "default": true
                                },
                                "event_label": {
                                  "type": "string",
                                  "example": "BLOCKED COMPRESSOR ALARM"
                                },
                                "id": {
                                  "type": "string",
                                  "example": "a7cb2ea8-80c5-45c4-b33d-6c08c23941db"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "machine 1"
                                },
                                "serial": {
                                  "type": "string",
                                  "example": "1234"
                                }
                              }
                            }
                          },
                          "severity": {
                            "type": "string",
                            "example": "alarm"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/organizations/{organization_id}/machine_models/{machine_model_id}/event_notifications": {
      "put": {
        "summary": "Event notifications update",
        "description": "",
        "operationId": "event-notifications-update",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "machine_model_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "events_notification_configurations"
                ],
                "properties": {
                  "events_notification_configurations": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "event_name": {
                          "type": "string"
                        },
                        "machines": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "enabled": {
                                "type": "boolean"
                              },
                              "id": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/recipes/organizations/{organization_id}/cookbooks": {
      "post": {
        "summary": "Cookbook create",
        "description": "",
        "operationId": "cookbook-create",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "coobook": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "machine_model_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/{device_id}/firmware_update/status": {
      "get": {
        "summary": "Firmware update status",
        "description": "Returns the last machine firmware update log containing info about status and progress",
        "operationId": "device-firmware-logs",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n  \"data\": {\n    \"status\": \"queued in_progress failed succeeded canceled\",\n    \"progress\": 44.5,\n    \"errors\": [],\n    \"inserted_at\": \"2023-09-28T12:47:00\",\n    \"firmware\": {\n      \"archived\": false,\n      \"build\": \"build_5\",\n      \"changelog\": null,\n      \"draft\": false,\n      \"firmware_url\": \"upload_url\",\n      \"id\": \"d505629a-d22e-44ac-bb15-393c833c87b1\",\n      \"insecure_firmware_url\": \"upload_url\",\n      \"inserted_at\": \"2023-09-28T12:47:00\",\n      \"major\": 5,\n      \"md5\": \"5\",\n      \"minor\": 5,\n      \"patch\": 5,\n      \"size\": 5,\n      \"updated_at\": \"2023-09-28T12:47:00\",\n      \"version\": \"5.5.5.build_5\"\n    }\n  }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": "queued in_progress failed succeeded canceled"
                        },
                        "progress": {
                          "type": "number",
                          "example": 44.5,
                          "default": 0
                        },
                        "errors": {
                          "type": "array"
                        },
                        "inserted_at": {
                          "type": "string",
                          "example": "2023-09-28T12:47:00"
                        },
                        "firmware": {
                          "type": "object",
                          "properties": {
                            "archived": {
                              "type": "boolean",
                              "example": false,
                              "default": true
                            },
                            "build": {
                              "type": "string",
                              "example": "build_5"
                            },
                            "changelog": {},
                            "draft": {
                              "type": "boolean",
                              "example": false,
                              "default": true
                            },
                            "firmware_url": {
                              "type": "string",
                              "example": "upload_url"
                            },
                            "id": {
                              "type": "string",
                              "example": "d505629a-d22e-44ac-bb15-393c833c87b1"
                            },
                            "insecure_firmware_url": {
                              "type": "string",
                              "example": "upload_url"
                            },
                            "inserted_at": {
                              "type": "string",
                              "example": "2023-09-28T12:47:00"
                            },
                            "major": {
                              "type": "integer",
                              "example": 5,
                              "default": 0
                            },
                            "md5": {
                              "type": "string",
                              "example": "5"
                            },
                            "minor": {
                              "type": "integer",
                              "example": 5,
                              "default": 0
                            },
                            "patch": {
                              "type": "integer",
                              "example": 5,
                              "default": 0
                            },
                            "size": {
                              "type": "integer",
                              "example": 5,
                              "default": 0
                            },
                            "updated_at": {
                              "type": "string",
                              "example": "2023-09-28T12:47:00"
                            },
                            "version": {
                              "type": "string",
                              "example": "5.5.5.build_5"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/devices/{device_id}/send_firmware_update_cancel_request": {
      "post": {
        "summary": "Cancel update",
        "description": "Note that no message is sent to the device, the update is deleted only on things5 side",
        "operationId": "cancel-update-request",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "https://demo.things5.digital/api/machine_firmwares/{machine_firmware_id}": {
      "delete": {
        "summary": "Delete",
        "description": "Deleting a firmware is possible only if there are no entities associated with the firmware like machines, variables, translations. If other entities are associated the quickest way is to *archive* the firmware. The end result is similar to deleting firmware. It will be marked as archived and not shown anymore in the firmwares page. It won't be possible to associated it to a machine",
        "operationId": "device-firmware-delete",
        "parameters": [
          {
            "name": "machine_firmware_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "422",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{\n    \"errors\": {\n        \"logs\": [\n            {\n                \"code\": \"VALIDATION_ARE_STILL_ASSOCIATED\",\n                \"message\": \"are still associated with this entry\",\n                \"opts\": {}\n            }\n        ]\n    }\n}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "logs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "example": "VALIDATION_ARE_STILL_ASSOCIATED"
                              },
                              "message": {
                                "type": "string",
                                "example": "are still associated with this entry"
                              },
                              "opts": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/machine_firmwares/{machine_firmware_id}/archive": {
      "post": {
        "summary": "Archive",
        "description": "Archived firmwares won't be visible in the firmwares page and it won't be possible to associate them with a machine",
        "operationId": "archive",
        "parameters": [
          {
            "name": "machine_firmware_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "204",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/machine_firmwares/{machine_firmware_id}": {
      "patch": {
        "summary": "Edit",
        "description": "Note that to set main firmware you need to use [device model update](ref:device-model-update)",
        "operationId": "edit",
        "parameters": [
          {
            "name": "machine_firmware_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "machine_firmware": {
                    "properties": {
                      "changelog": {
                        "type": "string"
                      },
                      "file": {
                        "type": "string",
                        "description": "This file will be used when sending machine update request to the device",
                        "format": "binary"
                      },
                      "draft": {
                        "type": "boolean",
                        "description": "if a firmware is draft only admins will be able to update a machine to this firmware"
                      }
                    },
                    "required": [],
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "examples": {
                  "Result": {
                    "value": "{}"
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "x-readme": {
    "headers": [],
    "explorer-enabled": false,
    "proxy-enabled": true
  },
  "x-readme-fauxas": true
}